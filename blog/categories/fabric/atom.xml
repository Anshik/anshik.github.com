<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Fabric | Ещё один блог]]></title>
  <link href="http://Anshik.github.com/blog/categories/fabric/atom.xml" rel="self"/>
  <link href="http://Anshik.github.com/"/>
  <updated>2013-05-27T15:23:14+04:00</updated>
  <id>http://Anshik.github.com/</id>
  <author>
    <name><![CDATA[Anshik]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Module cuisine, как нахлобучка над Fabric]]></title>
    <link href="http://Anshik.github.com/blog/2012/06/07/module-cuisine/"/>
    <updated>2012-06-07T10:25:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2012/06/07/module-cuisine</id>
    <content type="html"><![CDATA[<h3>Что такое Cuisine?</h3>

<p>Cuisine это надстройка, набор сахара, дополнительный уровень абстракции над <a href="/blog/2012/06/06/fabric-dlia-python">Fabric</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fabric для python, первые шаги]]></title>
    <link href="http://Anshik.github.com/blog/2012/06/06/fabric-dlia-python/"/>
    <updated>2012-06-06T16:54:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2012/06/06/fabric-dlia-python</id>
    <content type="html"><![CDATA[<h3>Что такое Fabric?</h3>

<p>Вольный перевод <a href="http://docs.fabfile.org/en/1.4.2/index.html">документации</a><br/>
Fabric &mdash; это библиотечка для python версии >= 2.5 и консольная утилитка для облегчения использования SSH при деплое проекта, или выполнения админских задач.</p>

<p>Она предоставляет простой набор операций для выполнения локальных или удалённых команд, загрузки, скачивания файлов и др.</p>

<!-- more -->


<h3>Установка</h3>

<p>Я устанавливаю в свой питоний инстанс, созданный как написано <a href="/blog/2012/06/05/ispolzovaniie-virtualenv-python">тут</a><br/>
<code>$ ./bin/easy_install fabric</code></p>

<p>Он подтягивает ещё <code>ssh 1.7.14</code> и <code>pycrypto 2.6</code>.</p>

<h3>Простейшее использование</h3>

<p>Обычно создают модуль на Python, содержащий одну или более функций, затем исполняют его при помощи <strong>fab</strong>. Рассмотрим простейший пример. Для запуска выполняем из папки с этим скриптом <code>fab hello</code>.</p>

<p>``` python fabric.py</p>

<h1>!./bin/python</h1>

<h1>-<em>- coding: utf-8 -</em>-</h1>

<p>from fabric.api import run</p>

<p>def hello():</p>

<pre><code>print "It's says: hello"
</code></pre>

<p><code>
При его запуске мне выдаёт предупреждение
</code> bash
/usr/local/lib/python2.6/dist-packages/pycrypto-2.6-py2.6-linux-x86_64.egg/Crypto/Util/number.py:57: PowmInsecureWarning: Not using mpz_powm_sec.  You should rebuild using libgmp >= 5 to avoid timing attack vulnerability.
  _warn("Not using mpz_powm_sec.  You should rebuild using libgmp >= 5 to avoid timing attack vulnerability.", PowmInsecureWarning)
<code>
</code> bash И затем непосредственно вывод fabric
It's says: hello</p>

<p>Done.
```
Предупреждание выдает даже не Фабрик, а pycrypto, ну и ладно, не буду ничего обновлять</p>

<h3>Передача аргументов</h3>

<p>Передача аргументов происходит следующим образом:<br/>
<code>&lt;task name&gt;:&lt;arg&gt;,&lt;kwarg&gt;=&lt;value&gt;,....</code></p>

<p>``` python Передача аргументов
from fabric.api import run</p>

<p>def hello(name_in='name'):</p>

<pre><code>print "It's says: %s" % name_in
</code></pre>

<p>```</p>

<p>Вызов с аргументами можно производить двумя способами:
<code>fab hello:name_in=Anshik</code><br/>
<code>fab hello:Anshik</code><br/>
Первый вариант словарем, второй &mdash; аргументами.</p>

<h3>Продолжение мысли cuisine</h3>

<p>cuisine &mdash; переводится как кухня<br/>
Оно добавляет ещё уровень абстракции для упрощения</p>

<p><a href="https://github.com/sebastien/cuisine">cuisine</a></p>

<p><a href="/blog/2012/06/07/module-cuisine">более подробно в блоге</a></p>
]]></content>
  </entry>
  
</feed>
