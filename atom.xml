<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ещё один блог]]></title>
  <link href="http://Anshik.github.com/atom.xml" rel="self"/>
  <link href="http://Anshik.github.com/"/>
  <updated>2013-12-23T09:49:16+04:00</updated>
  <id>http://Anshik.github.com/</id>
  <author>
    <name><![CDATA[Anshik]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mail.ru cloud WebDav]]></title>
    <link href="http://Anshik.github.com/blog/2013/12/23/mail-dot-ru-cloud-webdav/"/>
    <updated>2013-12-23T09:39:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2013/12/23/mail-dot-ru-cloud-webdav</id>
    <content type="html"><![CDATA[<p>У Mail.ru акция с 20 дек 2013 по 20 января 2014 можно установить их приложение на смартфон или десктоп и получить 1 Тб облачного хранилища бесплатно.</p>

<!-- more -->


<p><code>Когда будете логиниться в программе, указывайте логин полностью: bla-bla@mail.ru</code></p>

<h2>Подключение по Web Dav в linux</h2>

<p>В линуксе, запускаем Nautilus, или что вам нравится,<br/>
<strong>Сервер:</strong> webdav.cloud.mail.ru<br/>
<strong>Домашняя папка:</strong> /<br/>
<strong>Логин</strong>: bla-bla@mail.ru</p>

<p>И всё.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PIL virtualenv error _imaging.c:76]]></title>
    <link href="http://Anshik.github.com/blog/2013/11/27/pil-virtualenv-error-imaging-dot-c-76/"/>
    <updated>2013-11-27T15:18:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2013/11/27/pil-virtualenv-error-imaging-dot-c-76</id>
    <content type="html"><![CDATA[<p>Очень кратко, долго искал решение такой проблемы. У меня несколько питонов установлено на Ubuntu 10.10.
Для python2.6 установлены sudo apt-get install python-dev.<br/>
А для второго, питона, который используется в virtualenv (python2.7) оно не было установлено.<br/>
<em>Решение проблемы:</em></p>

<p><code>sudo apt-get install python2.7-dev</code>
А затем:
Само собой вы не забыли сделать
<code>source bin/activate</code></p>

<p>pip install Pillow</p>

<p>или</p>

<p>pip install PIL</p>

<!-- more -->


<p>А так была следующая ошибка</p>

<p>&#8221;&#8217;
  % pip install Pillow &#8211;download-cache  distrib                                                                          !4048
Downloading/unpacking Pillow
  Running setup.py egg_info for package Pillow</p>

<p>Installing collected packages: Pillow
  Running setup.py install for Pillow</p>

<pre><code>building 'PIL._imaging' extension
gcc -pthread -fno-strict-aliasing -g -O2 -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fPIC -DHAVE_LIBJPEG -DHAVE_LIBZ -I/usr/include/freetype2 -IlibImaging -I/home/apalkov/PycharmProjects/dok4you/dok4you/include -I/usr/local/include -I/usr/include -I/usr/include/python2.7 -c _imaging.c -o build/temp.linux-x86_64-2.7/_imaging.o
_imaging.c:76: fatal error: Python.h: Нет такого файла или каталога
compilation terminated.
error: command 'gcc' failed with exit status 1
Complete output from command /home/apalkov/PycharmProjects/dok4you/dok4you/bin/python2.7 -c "import setuptools;__file__='/home/apalkov/PycharmProjects/dok4you/dok4you/build/Pillow/setup.py';exec(compile(open(__file__).read().replace('\r\n', '\n'), __file__, 'exec'))" install --record /tmp/pip-VPTaMy-record/install-record.txt --single-version-externally-managed --install-headers /home/apalkov/PycharmProjects/dok4you/dok4you/include/site/python2.7:
running install
</code></pre>

<p>running build</p>

<p>running build_py</p>

<p>running egg_info</p>

<p>writing Pillow.egg-info/PKG-INFO</p>

<p>writing top-level names to Pillow.egg-info/top_level.txt</p>

<p>writing dependency_links to Pillow.egg-info/dependency_links.txt</p>

<p>warning: manifest_maker: standard file &#8216;-c&#8217; not found</p>

<p>reading manifest file &#8216;Pillow.egg-info/SOURCES.txt&#8217;</p>

<p>reading manifest template &#8216;MANIFEST.in&#8217;</p>

<p>writing manifest file &#8216;Pillow.egg-info/SOURCES.txt&#8217;</p>

<p>running build_ext</p>

<p>building &#8216;PIL._imaging&#8217; extension</p>

<p>gcc -pthread -fno-strict-aliasing -g -O2 -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fPIC -DHAVE_LIBJPEG -DHAVE_LIBZ -I/usr/include/freetype2 -IlibImaging -I/home/apalkov/PycharmProjects/dok4you/dok4you/include -I/usr/local/include -I/usr/include -I/usr/include/python2.7 -c <em>imaging.c -o build/temp.linux-x86_64-2.7/</em>imaging.o</p>

<p>_imaging.c:76: fatal error: Python.h: Нет такого файла или каталога</p>

<p>compilation terminated.</p>

<p>error: command &#8216;gcc&#8217; failed with exit status 1
&#8221;&#8217;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pygame инициализация, работа с прямоугольниками, прозрачностью]]></title>
    <link href="http://Anshik.github.com/blog/2013/10/22/pygame-initsializatsiia/"/>
    <updated>2013-10-22T13:38:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2013/10/22/pygame-initsializatsiia</id>
    <content type="html"><![CDATA[<h2>Инициализация</h2>

<p>Для работы с pygame следует инициализировать необходимые модули, проще всего инициализировать все:
<code>pygame.init()</code><br/>
Существует несколько вариантов инициализации окна pygame:</p>

<!-- more -->


<h2>Создание рабочей области окна</h2>

<h3>Создание окна требуемого размера.</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">screen</span> <span class="o">=</span> <span class="n">pygame</span><span class="o">.</span><span class="n">display</span><span class="o">.</span><span class="n">set_mode</span><span class="p">((</span><span class="mi">320</span><span class="p">,</span> <span class="mi">240</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Создание окна исходя из размеров фона</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">background</span> <span class="o">=</span> <span class="n">pygame</span><span class="o">.</span><span class="n">image</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="s">&#39;media/img_backgournd.jpg&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">screen</span> <span class="o">=</span> <span class="n">pygame</span><span class="o">.</span><span class="n">display</span><span class="o">.</span><span class="n">set_mode</span><span class="p">(</span><span class="n">background</span><span class="o">.</span><span class="n">get_size</span><span class="p">())</span>
</span><span class='line'><span class="n">screen</span><span class="o">.</span><span class="n">blit</span><span class="p">(</span><span class="n">background</span><span class="p">,</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Работа с прямоугольниками и текстом</h2>

<p>Прямоугольники служат для выбора части поверхностей, для получения размеров областей и др.
Конструктор простейшего прямоугольника выглядит так:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">In</span> <span class="p">[</span><span class="mi">1</span><span class="p">]:</span> <span class="kn">import</span> <span class="nn">pygame</span>
</span><span class='line'>
</span><span class='line'><span class="n">In</span> <span class="p">[</span><span class="mi">2</span><span class="p">]:</span> <span class="n">r</span> <span class="o">=</span> <span class="n">pygame</span><span class="o">.</span><span class="n">Rect</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">50</span><span class="p">)</span>   <span class="c"># 100х50 px</span>
</span><span class='line'>
</span><span class='line'><span class="n">In</span> <span class="p">[</span><span class="mi">3</span><span class="p">]:</span> <span class="n">r</span>
</span><span class='line'><span class="n">Out</span><span class="p">[</span><span class="mi">3</span><span class="p">]:</span> <span class="o">&lt;</span><span class="n">rect</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">50</span><span class="p">)</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>У объекта класса Rect есть множество методов, названия говорят за себя:<br/>
[&#8216;bottom&#8217;, &#8216;bottomleft&#8217;, &#8216;bottomright&#8217;, &#8216;center&#8217;, &#8216;centerx&#8217;, &#8216;centery&#8217;, &#8216;clamp&#8217;, &#8216;clamp_ip&#8217;, &#8216;clip&#8217;, &#8216;collidedict&#8217;, &#8216;collidedictall&#8217;,
 &#8216;collidelist&#8217;, &#8216;collidelistall&#8217;, &#8216;collidepoint&#8217;, &#8216;colliderect&#8217;, &#8216;contains&#8217;, &#8216;copy&#8217;, &#8216;fit&#8217;, &#8216;h&#8217;, &#8216;height&#8217;, &#8216;inflate&#8217;, &#8216;inflate_ip&#8217;,
 &#8216;left&#8217;, &#8216;midbottom&#8217;, &#8216;midleft&#8217;, &#8216;midright&#8217;, &#8216;midtop&#8217;, &#8216;move&#8217;, &#8216;move_ip&#8217;, &#8216;normalize&#8217;, &#8216;right&#8217;, &#8216;size&#8217;, &#8216;top&#8217;, &#8216;topleft&#8217;,
 &#8216;topright&#8217;, &#8216;union&#8217;, &#8216;union_ip&#8217;, &#8216;unionall&#8217;, &#8216;unionall_ip&#8217;, &#8216;w&#8217;, &#8216;width&#8217;, &#8216;x&#8217;, &#8216;y&#8217;]</p>

<p>Из этих атрибутов я выделю centerx и centery:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">font</span> <span class="o">=</span> <span class="n">pygame</span><span class="o">.</span><span class="n">font</span><span class="o">.</span><span class="n">Font</span><span class="p">(</span><span class="s">&#39;media/presentum.ttf&#39;</span><span class="p">,</span> <span class="mi">30</span><span class="p">)</span>      <span class="c"># задание шрифта и размера</span>
</span><span class='line'><span class="n">text_img</span> <span class="o">=</span> <span class="n">font</span><span class="o">.</span><span class="n">render</span><span class="p">(</span><span class="s">&#39;Строка для рендеринга&#39;</span><span class="p">,</span> <span class="bp">True</span><span class="p">,</span> <span class="mh">0xFF0000</span><span class="p">)</span> <span class="c"># строка, сглаживание, цвет</span>
</span><span class='line'>
</span><span class='line'><span class="n">text_pos</span> <span class="o">=</span> <span class="n">text_img</span><span class="o">.</span><span class="n">get_rect</span><span class="p">()</span>      <span class="c"># получаем пр-к нашего текста</span>
</span><span class='line'><span class="n">text_pos</span><span class="o">.</span><span class="n">centerx</span> <span class="o">=</span> <span class="n">r</span><span class="o">.</span><span class="n">centerx</span>        <span class="c"># центрируем позицию нашего текста по середине контейнера r</span>
</span><span class='line'><span class="n">text_pos</span><span class="o">.</span><span class="n">centery</span> <span class="o">=</span> <span class="n">r</span><span class="o">.</span><span class="n">centery</span>        <span class="c"># центрируем позицию нашего текста по середине контейнера r</span>
</span><span class='line'>
</span><span class='line'><span class="n">screen</span><span class="o">.</span><span class="n">blit</span><span class="p">(</span><span class="n">text_img</span><span class="p">,</span> <span class="n">text_pos</span><span class="p">)</span>     <span class="c"># копирование текста на экран</span>
</span><span class='line'><span class="n">pygame</span><span class="o">.</span><span class="n">display</span><span class="o">.</span><span class="n">update</span><span class="p">()</span>             <span class="c"># обновление экрана</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Прозрачность (Альфа-канал)</h2>

<p>Для загрузки изображения из png файла с альфа каналом следует использовать следующую строчку:</p>

<p><code>pic_with_alpha = pygame.image.load('media/src_with_alpha.png').convert_alpha()</code></p>

<p>Для получения изображения с прозрачным фоном мы редактируем png, удаляем фон, затем сохраняем файл без сохранения цвета прозрачности.</p>

<h3>Создание прозрачности для сложных поверхностей, полигонов и прочего</h3>

<p>Моё решение было следующим:<br/>
Немного меняю исходное изображение для того чтобы чёрный цвет не превратился в прозрачный, затем накладываю чёрную маску на изображение, говорю, что чёрный цвет становится прозрачным.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># Берём изображение, подгоняем под размер</span>
</span><span class='line'><span class="n">img</span> <span class="o">=</span> <span class="n">pygame</span><span class="o">.</span><span class="n">image</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="s">&#39;media/src.png&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">img_s</span> <span class="o">=</span> <span class="n">pygame</span><span class="o">.</span><span class="n">transform</span><span class="o">.</span><span class="n">scale</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="mi">204</span><span class="p">,</span> <span class="mi">142</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="c"># нужно заместить черный в исходном изображении на +1, иначе станет прозрачным</span>
</span><span class='line'><span class="n">pa_img_s</span> <span class="o">=</span> <span class="n">pygame</span><span class="o">.</span><span class="n">PixelArray</span><span class="p">(</span><span class="n">img_s</span><span class="p">)</span>         <span class="c"># создаем массив для замены цвета</span>
</span><span class='line'><span class="n">pa_img_s</span><span class="o">.</span><span class="n">replace</span><span class="p">((</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span>      <span class="c"># заменяем цвет</span>
</span><span class='line'><span class="n">img_s</span> <span class="o">=</span> <span class="n">pa_img_s</span><span class="o">.</span><span class="n">surface</span>
</span><span class='line'><span class="k">del</span> <span class="n">pa_img_s</span>                                <span class="c"># удаляем, иначе блочит поверхность</span>
</span><span class='line'>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="n">pygame</span><span class="o">.</span><span class="n">Surface</span><span class="p">((</span><span class="mi">240</span><span class="p">,</span> <span class="mi">146</span><span class="p">))</span>              <span class="c"># поверхность для преобразований</span>
</span><span class='line'><span class="n">pat</span> <span class="o">=</span> <span class="n">pygame</span><span class="o">.</span><span class="n">image</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="s">&#39;media/pattern.png&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">convert_alpha</span><span class="p">()</span>        <span class="c"># накладываем чёрный шаблон, с прозрачными вырезами</span>
</span><span class='line'>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">blit</span><span class="p">(</span><span class="n">img_s</span><span class="p">,</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>   <span class="c"># копируем наше изображение с &quot;немного не чёрным цветом&quot; на поверхность для преобразований</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">blit</span><span class="p">(</span><span class="n">pat</span><span class="p">,</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>     <span class="c"># сверху накладываем (копируем) маску</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">set_colorkey</span><span class="p">(</span><span class="n">pygame</span><span class="o">.</span><span class="n">Color</span><span class="p">(</span><span class="s">&#39;black&#39;</span><span class="p">))</span>       <span class="c"># устанавливаем чёрный цвет прозрачным</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Выделение части поверхности</h2>

<p>Мой стандартный use-case использования части поверхности (subsurface) &mdash; это копирование части фона для создания эффектов движения, анимации:</p>

<ul>
<li>копируем часть фона, на котором будет происходить действие</li>
<li>копируем изменение</li>
<li>ждем</li>
<li>снова копируем фон.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># задаём фон</span>
</span><span class='line'><span class="n">background</span> <span class="o">=</span> <span class="n">pygame</span><span class="o">.</span><span class="n">image</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="s">&#39;media/img_backgournd.jpg&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">screen</span> <span class="o">=</span> <span class="n">pygame</span><span class="o">.</span><span class="n">display</span><span class="o">.</span><span class="n">set_mode</span><span class="p">(</span><span class="n">background</span><span class="o">.</span><span class="n">get_size</span><span class="p">())</span>
</span><span class='line'><span class="n">screen</span><span class="o">.</span><span class="n">blit</span><span class="p">(</span><span class="n">background</span><span class="p">,</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">r</span> <span class="o">=</span> <span class="n">pygame</span><span class="o">.</span><span class="n">Rect</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">300</span><span class="p">,</span> <span class="mi">400</span><span class="p">)</span>     <span class="c"># размеры пр-ка, на котором будет производиться действие</span>
</span><span class='line'><span class="n">ball</span> <span class="o">=</span> <span class="n">pygame</span><span class="o">.</span><span class="n">image</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="s">&#39;media/ball.png&#39;</span><span class="p">)</span>  <span class="c"># загружаем картинку</span>
</span><span class='line'><span class="n">bg</span> <span class="o">=</span> <span class="n">background</span><span class="o">.</span><span class="n">subsurface</span><span class="p">(</span><span class="n">r</span><span class="p">)</span>               <span class="c"># создаём копию фона</span>
</span><span class='line'><span class="n">x_pos_left</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">y_pos</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">c</span> <span class="o">=</span> <span class="mi">10</span>
</span><span class='line'><span class="k">while</span> <span class="n">c</span><span class="p">:</span>
</span><span class='line'>    <span class="n">x_pos_left</span> <span class="o">+=</span> <span class="mi">10</span>
</span><span class='line'>    <span class="n">screen</span><span class="o">.</span><span class="n">blit</span><span class="p">(</span><span class="n">bg</span><span class="p">,</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>       <span class="c"># копируем фон</span>
</span><span class='line'>    <span class="n">screen</span><span class="o">.</span><span class="n">blit</span><span class="p">(</span><span class="n">ball</span><span class="p">,</span> <span class="p">(</span><span class="n">x_pos_left</span><span class="p">,</span> <span class="n">y_pos</span><span class="p">))</span>   <span class="c"># копируем картинку поверх</span>
</span><span class='line'>    <span class="n">c</span> <span class="o">-=</span> <span class="mi">1</span>
</span><span class='line'>    <span class="n">pygame</span><span class="o">.</span><span class="n">display</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">r</span><span class="p">)</span>    <span class="c"># обновлять не обязательно весь экран, можно определённую часть.</span>
</span><span class='line'>    <span class="n">sleep</span><span class="p">(</span><span class="mf">0.08</span><span class="p">)</span>                 <span class="c"># задержка, можно использовать pygame-овскую</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Работа с событиями (events)</h2>

<p>Данный вопрос рассмотрен везде, но не упомянуть его нельзя :)</p>

<figure class='code'><figcaption><span>простейший выход из приложения по кнопке</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">bRunning</span> <span class="o">=</span> <span class="bp">True</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="n">bRunning</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">for</span> <span class="n">event</span> <span class="ow">in</span> <span class="n">pygame</span><span class="o">.</span><span class="n">event</span><span class="o">.</span><span class="n">get</span><span class="p">():</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">event</span><span class="o">.</span><span class="n">type</span> <span class="o">==</span> <span class="n">pygame</span><span class="o">.</span><span class="n">KEYDOWN</span><span class="p">:</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">event</span><span class="o">.</span><span class="n">key</span> <span class="o">==</span> <span class="n">pygame</span><span class="o">.</span><span class="n">K_ESCAPE</span><span class="p">:</span>
</span><span class='line'>                <span class="n">bRunning</span> <span class="o">=</span> <span class="bp">False</span>
</span><span class='line'>                <span class="nb">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="c"># к примеру</span>
</span></code></pre></td></tr></table></div></figure>


<p>А это пример кастомного события</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># coding=utf-8</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">pygame</span>
</span><span class='line'>
</span><span class='line'><span class="n">COUNTER</span> <span class="o">=</span> <span class="n">pygame</span><span class="o">.</span><span class="n">USEREVENT</span> <span class="o">+</span> <span class="mi">5</span>  <span class="c"># 24+5 = 29</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Counter</span><span class="p">():</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">coord</span><span class="p">,</span> <span class="n">screen</span><span class="p">,</span> <span class="n">background</span><span class="p">,</span> <span class="n">counter</span><span class="p">,</span> <span class="n">up</span><span class="p">):</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">current_sub_timer</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">coord</span> <span class="o">=</span> <span class="n">coord</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">screen</span> <span class="o">=</span> <span class="n">screen</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">counter</span> <span class="o">=</span> <span class="n">counter</span>      <span class="c"># сколько секунд считать</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">up</span> <span class="o">=</span> <span class="n">up</span>                <span class="c"># если 1, возрастает счётчик, 0, убывает</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">rendtext</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_colored_text</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="mi">30</span><span class="p">),</span> <span class="p">(</span><span class="mi">255</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
</span><span class='line'>        <span class="n">r</span> <span class="o">=</span> <span class="n">rendtext</span><span class="o">.</span><span class="n">get_rect</span><span class="p">()</span>         <span class="c"># взяли 30 и увеличили размер пр-ка</span>
</span><span class='line'>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">bg</span> <span class="o">=</span> <span class="n">background</span><span class="o">.</span><span class="n">subsurface</span><span class="p">(</span><span class="n">r</span><span class="o">.</span><span class="n">move</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">coord</span><span class="p">))</span>     <span class="c"># сдвинули пр-к и взяли фон</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">get_colored_text</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">text</span><span class="p">,</span> <span class="n">color</span><span class="p">):</span>
</span><span class='line'>        <span class="n">bigfont</span> <span class="o">=</span> <span class="n">pygame</span><span class="o">.</span><span class="n">font</span><span class="o">.</span><span class="n">Font</span><span class="p">(</span><span class="s">&#39;presentum.ttf&#39;</span><span class="p">,</span> <span class="mi">60</span><span class="p">)</span>
</span><span class='line'>        <span class="n">rendtext</span> <span class="o">=</span> <span class="n">bigfont</span><span class="o">.</span><span class="n">render</span><span class="p">(</span><span class="n">text</span><span class="p">,</span> <span class="bp">True</span><span class="p">,</span> <span class="n">color</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">rendtext</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">get_next</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'><span class="sd">        возвращет 0 если таймер оттикал</span>
</span><span class='line'><span class="sd">        &quot;&quot;&quot;</span>
</span><span class='line'>        <span class="n">cur_second</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">current_sub_timer</span> <span class="o">/</span> <span class="mi">10</span>
</span><span class='line'>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">current_sub_timer</span> <span class="o">/</span> <span class="mi">10</span> <span class="o">==</span> <span class="bp">self</span><span class="o">.</span><span class="n">counter</span><span class="p">:</span>
</span><span class='line'>            <span class="k">return</span> <span class="mi">0</span>
</span><span class='line'>        <span class="k">else</span><span class="p">:</span>
</span><span class='line'>            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">up</span><span class="p">:</span>
</span><span class='line'>                <span class="n">new_val</span> <span class="o">=</span> <span class="n">cur_second</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>            <span class="k">else</span><span class="p">:</span>
</span><span class='line'>                <span class="n">new_val</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">counter</span> <span class="o">-</span> <span class="n">cur_second</span>
</span><span class='line'>            <span class="n">rendtext</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_colored_text</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">new_val</span><span class="p">),</span> <span class="p">(</span><span class="mi">255</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
</span><span class='line'>            <span class="bp">self</span><span class="o">.</span><span class="n">screen</span><span class="o">.</span><span class="n">blit</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">bg</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">coord</span><span class="p">)</span>
</span><span class='line'>            <span class="bp">self</span><span class="o">.</span><span class="n">screen</span><span class="o">.</span><span class="n">blit</span><span class="p">(</span><span class="n">rendtext</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">coord</span><span class="p">)</span>
</span><span class='line'>            <span class="n">pygame</span><span class="o">.</span><span class="n">display</span><span class="o">.</span><span class="n">update</span><span class="p">()</span>
</span><span class='line'>            <span class="bp">self</span><span class="o">.</span><span class="n">current_sub_timer</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>            <span class="k">return</span> <span class="mi">1</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
</span><span class='line'>    <span class="n">pygame</span><span class="o">.</span><span class="n">init</span><span class="p">()</span>
</span><span class='line'>    <span class="n">screen</span> <span class="o">=</span> <span class="n">pygame</span><span class="o">.</span><span class="n">display</span><span class="o">.</span><span class="n">set_mode</span><span class="p">((</span><span class="mi">1024</span><span class="p">,</span> <span class="mi">768</span><span class="p">))</span>
</span><span class='line'>    <span class="n">background</span> <span class="o">=</span> <span class="n">pygame</span><span class="o">.</span><span class="n">image</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="s">&#39;media/screen3.jpg&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">screen</span><span class="o">.</span><span class="n">blit</span><span class="p">(</span><span class="n">background</span><span class="p">,(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
</span><span class='line'>    <span class="n">pygame</span><span class="o">.</span><span class="n">display</span><span class="o">.</span><span class="n">update</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">pygame</span><span class="o">.</span><span class="n">time</span><span class="o">.</span><span class="n">set_timer</span><span class="p">(</span><span class="n">COUNTER</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>     <span class="c"># запускаем генерацию even-тов каждые 100мс</span>
</span><span class='line'>    <span class="n">counter</span> <span class="o">=</span> <span class="n">Counter</span><span class="p">((</span><span class="mi">350</span><span class="p">,</span> <span class="mi">300</span><span class="p">),</span> <span class="n">screen</span><span class="p">,</span> <span class="n">background</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="c"># передаём где вывести счётчик, </span>
</span><span class='line'>                                                            <span class="c"># наш экран, фон, сколько секунд считать, 0 - убывает</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">b_running</span> <span class="o">=</span> <span class="bp">True</span>
</span><span class='line'>    <span class="k">while</span> <span class="n">b_running</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">for</span> <span class="n">event</span> <span class="ow">in</span> <span class="n">pygame</span><span class="o">.</span><span class="n">event</span><span class="o">.</span><span class="n">get</span><span class="p">():</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">event</span><span class="o">.</span><span class="n">type</span> <span class="o">==</span> <span class="n">pygame</span><span class="o">.</span><span class="n">KEYDOWN</span><span class="p">:</span>
</span><span class='line'>                <span class="k">if</span> <span class="n">event</span><span class="o">.</span><span class="n">key</span> <span class="o">==</span> <span class="n">pygame</span><span class="o">.</span><span class="n">K_ESCAPE</span><span class="p">:</span>
</span><span class='line'>                    <span class="n">b_running</span> <span class="o">=</span> <span class="bp">False</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">elif</span> <span class="n">event</span><span class="o">.</span><span class="n">type</span> <span class="o">==</span> <span class="n">COUNTER</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">if</span> <span class="ow">not</span> <span class="n">counter</span><span class="o">.</span><span class="n">get_next</span><span class="p">():</span>
</span><span class='line'>                    <span class="n">pygame</span><span class="o">.</span><span class="n">time</span><span class="o">.</span><span class="n">set_timer</span><span class="p">(</span><span class="n">COUNTER</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>   <span class="c"># значит оттикал таймер, нужно остановить генерацию событий</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">main</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Звуковая дорожка из фильма linux]]></title>
    <link href="http://Anshik.github.com/blog/2013/05/27/zvukovaja-dorozhka-iz-filma-linux/"/>
    <updated>2013-05-27T15:05:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2013/05/27/zvukovaja-dorozhka-iz-filma-linux</id>
    <content type="html"><![CDATA[<h4>Для чего нужно извлекать звуковую дорожку из фильма</h4>

<p>В интернете очень много скринкастов, лекций, сам видео ряд там интересен, но не очень важен. И мне достаточно порой только звука.
Я извлекал звук из <a href="http://events.yandex.ru/events/shri/">этих Яндексовских лекций</a></p>

<!-- more -->


<h2>Извлечение свелось к паре команд</h2>

<p>Сначала нужно установить библиотечку:<br/>
<code>libavcodec-extra-53</code> или как-то так можно подглядеть в менеджере пакетов, какая будет подходить для вашего линукса.<br/>
Затем пробуем грабить дорожку, примерно так:<br/>
<code>avconv -i in.mp4 -vn -c:a libmp3lame -q:a 2 output.mp3</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Установка mysql в virtualenv linux]]></title>
    <link href="http://Anshik.github.com/blog/2013/05/27/ustanovka-mysql-v-virtualenv-linux/"/>
    <updated>2013-05-27T15:05:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2013/05/27/ustanovka-mysql-v-virtualenv-linux</id>
    <content type="html"><![CDATA[<h4>Установка mysql в virtualenv</h4>

<p>Столкнулся с данной проблемой, устанавливаю - не устанавливается.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> % bin/pip install mysql-python
</span><span class='line'>    metadata, <span class="nv">options</span> <span class="o">=</span> get_config<span class="o">()</span>
</span><span class='line'>      File <span class="s2">&quot;setup_posix.py&quot;</span>, line 43, in get_config
</span><span class='line'>        <span class="nv">libs</span> <span class="o">=</span> mysql_config<span class="o">(</span><span class="s2">&quot;libs_r&quot;</span><span class="o">)</span>
</span><span class='line'>      File <span class="s2">&quot;setup_posix.py&quot;</span>, line 25, in mysql_config
</span><span class='line'>        raise EnvironmentError<span class="o">(</span><span class="s2">&quot;%s not found&quot;</span> % <span class="o">(</span>mysql_config.path,<span class="o">))</span>
</span><span class='line'>    EnvironmentError: mysql_config not found
</span></code></pre></td></tr></table></div></figure>


<!-- more -->


<p>Я сначала установил <code>% bin/pip install distribute</code>.<br/>
Потом <code>% sudo apt-get install libmysqlclient-dev</code><br/>
И в конце концов <code>% bin/pip install mysql-python</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Изменение размера диска Virtualbox]]></title>
    <link href="http://Anshik.github.com/blog/2013/04/02/izmienieniie-razmiera-diska-virtualbox/"/>
    <updated>2013-04-02T09:55:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2013/04/02/izmienieniie-razmiera-diska-virtualbox</id>
    <content type="html"><![CDATA[<h3>Введение, основная часть и заключение</h3>

<blockquote><p>VBoxManage modifyhd YOUR_HARD_DISK.vdi &#8211;resize SIZE_IN_MB</p></blockquote>

<p><strong>Пример</strong><br/>
Диск станет 10 Гб<br/>
VBoxManage modifyhd YOUR_HARD_DISK.vdi &#8211;resize 10000</p>

<p>Только для того, чтобы увидеть увеличенный в windows нужно ещё како-нибудь программой сделать resize раздела.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Установка PyQt4 в ubuntu 10.10, Python3.3]]></title>
    <link href="http://Anshik.github.com/blog/2013/03/22/ustanovka-pyqt4-v-ubuntu-10-dot-10/"/>
    <updated>2013-03-22T12:45:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2013/03/22/ustanovka-pyqt4-v-ubuntu-10-dot-10</id>
    <content type="html"><![CDATA[<h3>Введение</h3>

<p>Возник вопрос:</p>

<blockquote><p>Как установить в ubuntu 10.10 PyQt4 с python 3.3?</p></blockquote>

<p>Есть ответ:</p>

<!-- more -->


<h3>Установка Python 3.3</h3>

<p>Для установки потребуются пакеты</p>

<p>Для Ubuntu/ LinuxMint/Debian</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get install build-essential libncursesw5-dev libreadline5-dev libssl-dev libgdbm-dev libc6-dev libsqlite3-dev tk-dev
</span></code></pre></td></tr></table></div></figure>


<p>Скачать релиз <a href="http://www.python.org/download/releases">Python 3.3</a><br/>
К примеру так:</p>

<blockquote><p>wget http://www.python.org/ftp/python/3.x/Python-3.x.tar.bz2</p></blockquote>

<p>Распаковать:</p>

<blockquote><p>tar -xjf Python-3.xtar.bz2 cd Python-3.x</p></blockquote>

<p>Сконфигурировать и собрать с префиксом (install dir) of /opt/python3, скомпилировать, и установить.</p>

<figure class='code'><figcaption><span>последовательность конфигурирования, сборки и установки</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>./configure --prefix<span class="o">=</span>/opt/python3
</span><span class='line'>make
</span><span class='line'>sudo make install
</span></code></pre></td></tr></table></div></figure>


<p>Теперь Python установлен в папке /opt/python3.</p>

<p>В скрипты в начало добавлять</p>

<blockquote><p>#!/opt/python3/bin/python3</p></blockquote>

<h3>Установка SIP</h3>

<p>Скачать<br/>
SIP взять <a href="http://www.riverbankcomputing.com/software/sip/download">тут</a></p>

<p>Распаковать</p>

<blockquote><p>tar zxvf sip-4.14.4.tar.gz</p></blockquote>

<p>Зайти в распакованную папку, запустить конфигурирование, сборку, установку:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/opt/python3/bin/python3 configure.py
</span><span class='line'>make
</span><span class='line'>sudo make install
</span></code></pre></td></tr></table></div></figure>


<h3>Установка самого PyQt4</h3>

<p>Алгоритм такой же: скачать, распаковать, сконфигурировать, <strong>есть нюанс</strong>, указать где лежит qmake-qt4:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/opt/python3/bin/python3 configure.py --qmake /usr/bin/qmake-qt4
</span><span class='line'>make
</span><span class='line'>sudo make install
</span></code></pre></td></tr></table></div></figure>


<h3>Использование</h3>

<blockquote><p>/opt/python3/bin/pyvenv &#8211;system-site-packages a</p></blockquote>

<p>Это мы сказали: создай виртуальное окружение в папке &#8220;a&#8221;, с использованием site-packages из системы.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sublime Vintage mode keymap]]></title>
    <link href="http://Anshik.github.com/blog/2012/11/13/sublime-vintage-mode-keymap/"/>
    <updated>2012-11-13T17:26:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2012/11/13/sublime-vintage-mode-keymap</id>
    <content type="html"><![CDATA[<h3>Введение</h3>

<p>Sublime Vintage mode, это Винтажный режим, который поддерживает команды редактора vi || vim, в сочетании с фичами Sublime Text, включая множественное выделение.</p>

<!-- more -->


<h3>Установка Vintage (Включение)</h3>

<p>По умолчанию Vintage режим выключен путём игнорирования данного пакета. Для включения нужно Preferences/Settings - Default меню выбрать. Найти строчку</p>

<blockquote><p>&#8220;ignored_packages&#8221;: [&#8220;Vintage&#8221;]</p></blockquote>

<p>затем открыть пользовательские настройки и вставить строчку</p>

<blockquote><p>&#8220;ignored_packages&#8221;: []</p></blockquote>

<p>Теперь Vintage режим включён. Вы увидите &#8220;INSERT MODE&#8221; внизу в строке состояния. Редактор стартует в режиме вставки вначале, а правильно в командном:</p>

<blockquote><p>&#8220;vintage_start_in_command_mode&#8221;: true</p></blockquote>

<h3>Sublime Vintage mode keymap, кнопки</h3>

<h4>Vintage позволяет делать простые действия кнопками:</h4>

<p>d (delete) удалить<br/>
y (copy) копировать<br/>
c (change) изменить<br/>
gu (lower case) преобразовать в нижний регистр<br/>
gU (upper case) преобразовать в верхний регистр<br/>
g~ (swap case) инвертировать регистр<br/>
&lt; (unindent) уменьшить отступ<br/>
> (indent) увеличить отступ</p>

<h4>Перемещения в Vintage mode</h4>

<p><strong>курсор</strong><br/>
l - влево<br/>
h - вправо<br/>
j - вниз<br/>
k - вверх<br/>
W - перемещение вперёд по &#8220;большим&#8221; словам (к началу)<br/>
w - перемещение вперёд по &#8220;маленьким&#8221; словам (к началу)<br/>
e - перемещение вперёд по &#8220;маленьким&#8221; словам (к концу)<br/>
E - перемещение вперёд по &#8220;большим&#8221; словам (к концу)<br/>
b - перемещение назад по &#8220;маленьким&#8221; словам<br/>
B - перемещение назад по &#8220;большим&#8221; словам<br/>
alt+w (move by sub-words) - перемещение по &#8220;подсловам&#8221; вперёд<br/>
alt+W (move backwards by sub-words) перемещение по &#8220;подсловам&#8221; назад<br/>
$ - перемещение к концу строки<br/>
^ - перемещение к началу строки (первый &#8220;не пробельный&#8221; символ)<br/>
% - перемещение к открывающей/закрывающей скобочке<br/>
0 - перемещение к началу строки (нулевой позиции) <br/>
G - переход к концу документа<br/>
gg - переход к началу документа <br/>
f + символ - поиск первого вхождения буквы в строке (вперёд)<br/>
F + символ - поиск первого вхождения буквы в строке (назад)<br/>
t - (till) переход до символа (вперёд)<br/>
T - (till) переход до символа (назад)<br/>
ctrl+f - page down<br/>
ctrl+b - page up<br/>
H - курсор вверх экрана<br/>
M - курсор посередине экрана<br/>
L - курсор вниз экрана</p>

<p>Текстовые объекты поддерживаются включая слова, кавычки, скобочки и теги.</p>

<p>Повтор последней команды (&#8216;.&#8217;)</p>

<p>Поддерживаются макросы, закладки и регистры.<br/>
Также поддерживаются команды:<br/>
* - переход по тегам (начало/конец)<br/>
/ - <strong>поиск</strong> после слеша набираем искомое, похоже на ctrl+i</p>

<h4>Выделение</h4>

<p>v - переход в режим выделения, дальше командами навигации</p>

<h3>Замечания</h3>

<p>Правильно будет установить в настройках также, чтобы некоторые команда sublime не пересекались с Vintage</p>

<blockquote><p>&#8220;vintage_ctrl_keys&#8221;: true</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WebDAV на примере Яндекс.Диск]]></title>
    <link href="http://Anshik.github.com/blog/2012/11/12/webdav-na-primierie-iandieks-dot-disk/"/>
    <updated>2012-11-12T10:52:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2012/11/12/webdav-na-primierie-iandieks-dot-disk</id>
    <content type="html"><![CDATA[<h3>Первый вариант WebDAV в Linux и FreeBSD</h3>

<p><a href="http://help.yandex.ru/disk/webdav/webdav-linux.xml">Тут</a> описано как подключать диск через Наутилус и Дельфин. Познавательно, но хочется большего.</p>

<!-- more -->


<h3>Второй вариант davfs2</h3>

<p>Устанавливаем пакет для работы с файловой системой WebDAV</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get install davfs2
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>создаём точку монтирования и монтируем</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir ~/YNDXDisk
</span><span class='line'>mount -t davfs https://webdav.yandex.ru ~/YNDXDisk
</span></code></pre></td></tr></table></div></figure>


<p>Вводим имя пользователя и пароль.</p>

<h3>Третий вариант Cadaver</h3>

<p>sudo apt-get install cadaver
cadaver -t http://example.com/webdav/autopub/dir/you/want</p>

<p>Вот пример <a href="http://robertmarkbramprogrammer.blogspot.ru/2010/09/using-webdav-and-cadaver-with-dotcms.html">скрипта</a>, правда не пробовал</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#! /bin/bash</span>
</span><span class='line'><span class="c"># webDavTransfer.sh</span>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;$1&quot;</span> !<span class="o">=</span> <span class="s2">&quot;-d&quot;</span> <span class="o">]</span> ; <span class="k">then</span>
</span><span class='line'><span class="k">   </span><span class="nb">echo </span>Usage <span class="nv">$0</span> -d dest-path files ...
</span><span class='line'>   <span class="nb">echo </span>Transfer files from current directory to dest-path in webDAV.
</span><span class='line'>   <span class="nb">exit </span>2
</span><span class='line'><span class="k">fi</span>
</span><span class='line'><span class="nv">destPath</span><span class="o">=</span><span class="nv">$2</span>
</span><span class='line'><span class="nb">shift</span>; <span class="nb">shift</span>
</span><span class='line'>
</span><span class='line'>cadaver -t <span class="s">&lt;&lt;EOF</span>
</span><span class='line'><span class="s">open http://example.com/webdav/autopub/base-path</span>
</span><span class='line'><span class="s">cd $destPath</span>
</span><span class='line'><span class="s">mput $@</span>
</span><span class='line'><span class="s">quit</span>
</span><span class='line'><span class="s">EOF</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Вывод</h3>

<p>Мне оказолось удобнее иногда монтировать Яндекс.Диск и бэкапиться на него. Т.к. соединение с интернетом не стабильное.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sublime Package Control]]></title>
    <link href="http://Anshik.github.com/blog/2012/10/17/sublime-package-control/"/>
    <updated>2012-10-17T13:06:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2012/10/17/sublime-package-control</id>
    <content type="html"><![CDATA[<h3>Sublime Package Control</h3>

<p>Package Control это плагин для Sublime, который позвляет управлять и устанавливать новые плагины.</p>

<!-- more -->


<h3>Установка Sublime Package Control</h3>

<p>Для установки нужно зайти на <a href="http://wbond.net/sublime_packages/package_control/installation">сайт</a> и скопировать следующее:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">urllib2</span><span class="o">,</span><span class="nn">os</span><span class="p">;</span> <span class="n">pf</span><span class="o">=</span><span class="s">&#39;Package Control.sublime-package&#39;</span><span class="p">;</span> <span class="n">ipp</span><span class="o">=</span><span class="n">sublime</span><span class="o">.</span><span class="n">installed_packages_path</span><span class="p">();</span> <span class="n">os</span><span class="o">.</span><span class="n">makedirs</span><span class="p">(</span><span class="n">ipp</span><span class="p">)</span> <span class="k">if</span> <span class="ow">not</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">ipp</span><span class="p">)</span> <span class="k">else</span> <span class="bp">None</span><span class="p">;</span> <span class="n">urllib2</span><span class="o">.</span><span class="n">install_opener</span><span class="p">(</span><span class="n">urllib2</span><span class="o">.</span><span class="n">build_opener</span><span class="p">(</span><span class="n">urllib2</span><span class="o">.</span><span class="n">ProxyHandler</span><span class="p">()));</span> <span class="nb">open</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">ipp</span><span class="p">,</span><span class="n">pf</span><span class="p">),</span><span class="s">&#39;wb&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">urllib2</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span><span class="s">&#39;http://sublime.wbond.net/&#39;</span><span class="o">+</span><span class="n">pf</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">&#39; &#39;</span><span class="p">,</span><span class="s">&#39;%20&#39;</span><span class="p">))</span><span class="o">.</span><span class="n">read</span><span class="p">());</span> <span class="k">print</span> <span class="s">&#39;Please restart Sublime Text to finish installation&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Дальше в Sublime Text 2 открыть консоль python <strong>ctrl+~</strong><br/>
Вставить код туда, нажать Enter и перезапустить Sublime.
Всё, Package Control установлен.</p>

<h3>Использование Package Control</h3>

<p>Нажимаем <strong>Ctrl+Shift+p</strong>, набираем <strong>install</strong>. Программка подсасывает из интернета список плагинов для установки. И медитируем на длинный список плагинов.</p>

<h3>Описание некоторых плагинов</h3>

<h4>Sublime-Aduino</h4>

<p>Подсветка синтаксиса, и ещё чего-то для Ардуино.</p>

<h4>Markdown Preview</h4>

<p>Для тех кому нужно, в браузере показывает md.</p>

<h4>SideBarEnhancements</h4>

<p>Тоже полезная штука, добавляет действий при правом клике в сайдбаре.</p>

<h4><a href="https://github.com/aziz/PlainTasks">PlainTasks</a></h4>

<p>Это шикарная TODO-шница. Файлы с расширением todo, и др.
Строчка заканчивающаяся на &#8220;:&#8221; является проектом<br/>
<strong><code>⌘ + enter</code> or <code>⌘ + i</code></strong>: новая задача<br/>
<strong><code>⌘ + d</code></strong>: завершить/незавершить задачу<br/>
<strong><code>⌘ + shift + a</code></strong> архивировать задачу<br/>
<strong><code>⌘ + r</code></strong> быстро переключаться по проектам<br/>
<code>--</code> и затем <code>tab key</code> сделает это: <code>--- ✄ -----------------------</code></p>

<h4>Проблемы при работе с Package Control</h4>

<h5>Ошибка &#8220;sublime package control UnicodeEncodeError: &#8216;ascii&#8217; codec can&#8217;t encode&#8230;&#8221;</h5>

<p>Проблема возникает под виндой, не догадался бы, если бы в консоль не посмотрел. ctrl+~</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="ne">Exception</span> <span class="ow">in</span> <span class="n">thread</span> <span class="n">Thread</span><span class="o">-</span><span class="mi">4</span><span class="p">:</span>
</span><span class='line'><span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;.</span><span class="se">\t</span><span class="s">hreading.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">532</span><span class="p">,</span> <span class="ow">in</span> <span class="n">__bootstrap_inner</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;.\Package Control.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1890</span><span class="p">,</span> <span class="ow">in</span> <span class="n">run</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;.\Package Control.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1759</span><span class="p">,</span> <span class="ow">in</span> <span class="n">make_package_list</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;.\Package Control.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1121</span><span class="p">,</span> <span class="ow">in</span> <span class="n">list_available_packages</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;.\Package Control.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1066</span><span class="p">,</span> <span class="ow">in</span> <span class="n">list_repositories</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;.\Package Control.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">175</span><span class="p">,</span> <span class="ow">in</span> <span class="n">get_repositories</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;.\Package Control.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">148</span><span class="p">,</span> <span class="ow">in</span> <span class="n">fetch_channel</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;.\Package Control.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1007</span><span class="p">,</span> <span class="ow">in</span> <span class="n">download_url</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;.\Package Control.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">602</span><span class="p">,</span> <span class="ow">in</span> <span class="n">download</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;.\urllib2.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">126</span><span class="p">,</span> <span class="ow">in</span> <span class="n">urlopen</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;.\urllib2.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">391</span><span class="p">,</span> <span class="ow">in</span> <span class="nb">open</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;.\urllib2.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">409</span><span class="p">,</span> <span class="ow">in</span> <span class="n">_open</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;.\urllib2.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">369</span><span class="p">,</span> <span class="ow">in</span> <span class="n">_call_chain</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;.\Package Control.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">92</span><span class="p">,</span> <span class="ow">in</span> <span class="n">https_open</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;.\urllib2.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1133</span><span class="p">,</span> <span class="ow">in</span> <span class="n">do_open</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;.\httplib.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">910</span><span class="p">,</span> <span class="ow">in</span> <span class="n">request</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;.\httplib.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">947</span><span class="p">,</span> <span class="ow">in</span> <span class="n">_send_request</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;.\httplib.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">904</span><span class="p">,</span> <span class="ow">in</span> <span class="n">endheaders</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;.\httplib.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">776</span><span class="p">,</span> <span class="ow">in</span> <span class="n">_send_output</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;.\httplib.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">735</span><span class="p">,</span> <span class="ow">in</span> <span class="n">send</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;.\Package Control.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">71</span><span class="p">,</span> <span class="ow">in</span> <span class="n">connect</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;.\ssl.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">350</span><span class="p">,</span> <span class="ow">in</span> <span class="n">wrap_socket</span>
</span><span class='line'>  <span class="n">File</span> <span class="s">&quot;.\ssl.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">113</span><span class="p">,</span> <span class="ow">in</span> <span class="n">__init__</span>
</span><span class='line'><span class="ne">UnicodeEncodeError</span><span class="p">:</span> <span class="s">&#39;ascii&#39;</span> <span class="n">codec</span> <span class="n">can</span><span class="s">&#39;t encode characters in position 26-37: ordinal not in range(128)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Решение есть <a href="https://github.com/wbond/sublime_package_control/issues/125">тут</a>
Суть его <a href="http://sublime.wbond.net/testing/Package%20Control.sublime-package">скачать</a>, скопировать в папку Package Control содержимое архива, и перезапустить sublime. Будет всё работать.</p>

<h3>А под виндой работать тяжело&#8230; Зато играть легко :)</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[QR коды]]></title>
    <link href="http://Anshik.github.com/blog/2012/09/27/qr-kody/"/>
    <updated>2012-09-27T08:33:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2012/09/27/qr-kody</id>
    <content type="html"><![CDATA[<h3>Что такое QR коды</h3>

<p>Это такие рисунки, которые могут кодировать некоторое сообщение в разных режимах, такие как буквы, буквы+цифры, цифры и др. Чем больше QR код, и чем больше там точек, тем больше информации можно в него поместить.</p>

<!-- more -->


<h3>Для чего используются QR коды</h3>

<p>QR кодами можно закодировать слово, адрес сайта телефон, и др.</p>

<h3>Как сделать свой QR код</h3>

<ol>
<li>Скучно и <a href="http://www.qrcoder.ru/">не красиво</a></li>
<li>С выдумкой и возможностью <a href="http://www.qrcoder.ru/">редактировать</a>, даже бесплатно.</li>
</ol>


<h4>Более вдумчиво и подробно</h4>

<p>Подробно описано на <a href="http://habrahabr.ru/post/127197/">хабре</a>, с примерами на русском (и пример и статья :).
Либо в <a href="http://en.wikipedia.org/wiki/QR_code">википедии</a>, подробно и на английском.</p>

<p><img class="center" src="http://Anshik.github.com/../blog_img/Anshik.github.png" title="Вот, что у меня получилось за несколько минут" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Я купил Arduino, первые впечетления]]></title>
    <link href="http://Anshik.github.com/blog/2012/09/12/ia-kupil-arduino/"/>
    <updated>2012-09-12T09:37:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2012/09/12/ia-kupil-arduino</id>
    <content type="html"><![CDATA[<h3>Введение</h3>

<p>Казалось бы, ну купил, и купил. Чего тут рассказывать. Искал подешевле, нашел предложения на alliexpress, но решил брать на buyincoins, как-то привычнее и цена в 11-12 долларов за Arduino Nano меня вполне устроила. Само собой я погуглил в яндексе про &#8220;arduino &amp; buyincoins&#8221;. Нашел на форуме сайта arduino.ru негативный отзыв о покупке arduino nano на buyincoins, что мол заказывал 10 шт. пришли все в одном пакете наваленные, доехали помятые и побитые. Да еще и регулятор напряжения горит и взрывается. В общем мне повезло. Пришло целое, не царапаное, не гнутое, в антистатическом пакете и длинным кабелем mini usb, ничего не греется и не горит. Дошло быстро, заказал 26 августа, 9 сентября уже было на почте. <strong>Рекомендую.</strong></p>

<!-- more -->


<h3>Детальное рассмотрение</h3>

<p><img class="center" src="http://Anshik.github.com/../blog_img/arduino_nano_top.jpg" title="arduino nano вид сверху" ></p>

<ul>
<li>В центре стоит микросхема Atmel Mega328P AU, дата шит на <a href="http://www.atmel.com/devices/ATMEGA328P.aspx?tab=documents">ATMEGA328P</a></li>
<li>слева кнопочка, маленькая и туговатая reset</li>
<li>4 светодиода Rx,Tx, Power, L - это пользовательский, которым моргает первое приложение для Ардуино.</li>
</ul>


<p><img class="center" src="http://Anshik.github.com/../blog_img/arduino_nano_bottom.jpg" title="arduino nano вид снизу" ><br/>
Снизу скучно, микросхема FTDI FT232RL usb to rs232, регулятор напряжения, пара резисторных сборок, конденсаторы и диод.</p>

<h3>Первое включение</h3>

<p>В устройствах всегда самое интересное и ответственное первое включение, хоть я и уверен, что в китае каждую ардуинку проверяют. Тем не менее внимательно просмотрел ножки на наличие &#8220;соплей&#8221;, грязи и др. Включил, заработало (заморгало светодиодами).</p>

<h3>Первое программирование Arduino Nano</h3>

<p>Всё очень просто: скачал с <a href="http://arduino.cc/en/Main/Software">офф сайта</a> софтинку, мне нужно было под Ubuntu, в версии 1.0.1 её даже перевели. Подключил платку к компьютеру, запустил программу Arduino.
Выставляем нашу плату: Сервис -> Плата -> Arduino Nano w/Atmega328
Далее Файл -> Примеры -> Basics -> Blink</p>

<p>Загрузится скетч с текстом программы. Далее нажимаем кнопку со стрелочкой вправо, и произойдет загрузка кода в микросхему. И она заморгает светодиодом L раз в секунду.</p>

<figure class='code'><figcaption><span>Привожу код примера</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">  Blink</span>
</span><span class='line'><span class="cm">  Turns on an LED on for one second, then off for one second, repeatedly.</span>
</span><span class='line'><span class="cm"> </span>
</span><span class='line'><span class="cm">  This example code is in the public domain.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Pin 13 has an LED connected on most Arduino boards.</span>
</span><span class='line'><span class="c1">// give it a name:</span>
</span><span class='line'><span class="kt">int</span> <span class="n">led</span> <span class="o">=</span> <span class="mi">13</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// the setup routine runs once when you press reset:</span>
</span><span class='line'><span class="kt">void</span> <span class="nf">setup</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// initialize the digital pin as an output.</span>
</span><span class='line'>  <span class="n">pinMode</span><span class="p">(</span><span class="n">led</span><span class="p">,</span> <span class="n">OUTPUT</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// the loop routine runs over and over again forever:</span>
</span><span class='line'><span class="kt">void</span> <span class="nf">loop</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">digitalWrite</span><span class="p">(</span><span class="n">led</span><span class="p">,</span> <span class="n">HIGH</span><span class="p">);</span>   <span class="c1">// turn the LED on (HIGH is the voltage level)</span>
</span><span class='line'>  <span class="n">delay</span><span class="p">(</span><span class="mi">100</span><span class="p">);</span>               <span class="c1">// wait for a second</span>
</span><span class='line'>  <span class="n">digitalWrite</span><span class="p">(</span><span class="n">led</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span>    <span class="c1">// turn the LED off by making the voltage LOW</span>
</span><span class='line'>  <span class="n">delay</span><span class="p">(</span><span class="mi">100</span><span class="p">);</span>               <span class="c1">// wait for a second</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[1Gb easy_install]]></title>
    <link href="http://Anshik.github.com/blog/2012/06/14/1gb-virtualenv-easy-install/"/>
    <updated>2012-06-14T18:50:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2012/06/14/1gb-virtualenv-easy-install</id>
    <content type="html"><![CDATA[<h3>Введение</h3>

<p>Зачем пост, опять же, чтобы не забыть.
Проблема в следующем. На хостинге <a href="http://1gb.ru">1Gb.ru</a> установлены две версии python:
* python 2.7
* python 3.2
по умолчанию используется версия 3.2. <strong>НО</strong> Django работает максимум на версии 2.7, а django-cms с версией Django 1.3, это так к слову.</p>

<blockquote><p>Итак, задача:<br/>
1. сделать python2.7 по умолчанию<br/>
2. настроить easy_install</p></blockquote>

<p>Решение частично <a href="http://www.1gb.ru/wiki/index.php?title=Django_-_%D0%B1%D1%8B%D1%81%D1%82%D1%80%D1%8B%D0%B9_%D1%81%D1%82%D0%B0%D1%80%D1%82">описано</a> на 1gb</p>

<p>Приведу только команды от туда, кому хочется слов почитать, зайдет туда.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$export</span> <span class="nv">PYTHON_VERSION</span><span class="o">=</span><span class="sb">`</span>eselect python list --python2 | awk <span class="s1">&#39;/\*$/ {print $2}&#39;</span><span class="sb">`</span>; <span class="nb">echo</span> <span class="k">${</span><span class="nv">PYTHON_VERSION</span><span class="k">}</span>
</span><span class='line'><span class="nv">$grep</span> -q <span class="s2">&quot;=${PYTHON_VERSION}&quot;</span> ~/.bashrc <span class="o">||</span> sed -i <span class="s2">&quot;/happen/a alias python=${PYTHON_VERSION}\nalias easy_install=easy_install-$(echo ${PYTHON_VERSION} | tr -d python)&quot;</span> ~/.bashrc
</span><span class='line'><span class="nv">$source</span> ~/.bashrc
</span><span class='line'><span class="nv">$echo</span> <span class="s1">&#39;export PATH=${HOME}/python/bin:${HOME}/python/lib64/&#39;</span><span class="k">${</span><span class="nv">PYTHON_VERSION</span><span class="k">}</span><span class="s1">&#39;/site-packages:${PATH}&#39;</span> &gt;&gt; ~/.bashrc
</span><span class='line'><span class="nv">$echo</span> <span class="s1">&#39;export PYTHONPATH=${HOME}/python/lib64/&#39;</span><span class="k">${</span><span class="nv">PYTHON_VERSION</span><span class="k">}</span><span class="s1">&#39;/site-packages:${PYTHONPATH}&#39;</span> &gt;&gt; ~/.bashrc
</span><span class='line'><span class="nv">$source</span> ~/.bashrc
</span><span class='line'><span class="nv">$ </span>cat &gt; ~/.pydistutils.cfg <span class="s">&lt;&lt;END</span>
</span><span class='line'><span class="s">[install]</span>
</span><span class='line'><span class="s">prefix = \$HOME/python</span>
</span><span class='line'>
</span><span class='line'><span class="s">[easy_install]</span>
</span><span class='line'><span class="s">install_dir = \$HOME/python/lib64/${PYTHON_VERSION}/site-packages</span>
</span><span class='line'><span class="s">END</span>
</span><span class='line'><span class="nv">$mkdir</span> -p ~/src ~/python/lib64/<span class="k">${</span><span class="nv">PYTHON_VERSION</span><span class="k">}</span>/site-packages ~/django
</span><span class='line'><span class="nv">$cd</span> ~/python; ln -s lib64 lib; <span class="nb">cd</span>
</span></code></pre></td></tr></table></div></figure>


<p>Краткое описание, что делает:<br/>
1-я строка версия python получается<br/>
2-я делаются алиасы в .bashrc на python и easy_install (у меня алиас на второе не прописался, я этого не заметил&#8230; решил установкой своего easy_install)<br/>
4,5-я пути прописываются<br/>
7-13 файл настроек easy_install создаётся, смотрите, может ругаться на то что в нём написано <strong>$HOME</strong> вместо полного пути<br/>
14-15 создаются папки и симлинки</p>

<p>Ключ -l выводит пакеты установленный только внутри virtualenv, что при создании окружения с ключем &#8211;no-site-packages теряет всякий смысл.</p>

<p>Далее этот список нужно сохранить:</p>

<p>$ pip freeze -l > pip-requirements</p>

<p>Тепреь в файле pip-requirements лежит список всех необходимых для запуска пакетов. Этот нужно положить в вашу source control и при необходимости обновлять.</p>

<p>Чтобы установить все необходимые пакеты, необходимо выполнить команду:</p>

<p>$ pip install -r pip-requirements</p>

<p>The &#8211;download-cache option should do what you want:
pip install &#8211;download-cache=&#8221;/pth/to/downloaded/files&#8221; package</p>

<p>However, when I tested this, the main package downloaded, saved and installed ok, but the the dependancies were saved with their full url path as the name - a bit annoying, but all the tar.gz files were there.</p>

<p>The &#8211;download option just downloads the main package without it&#8217;s dependancies and doesn&#8217;t install.
pip install &#8211;download=&#8221;/pth/to/downloaded/files&#8221; package</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Подключение по ssh без пароля]]></title>
    <link href="http://Anshik.github.com/blog/2012/06/14/podkliuchieniie-po-ssh-biez-parolia/"/>
    <updated>2012-06-14T08:27:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2012/06/14/podkliuchieniie-po-ssh-biez-parolia</id>
    <content type="html"><![CDATA[<p>Этот пост скорее чтобы не забыть самому как это делается, и всегда знать где найти.</p>

<h1>Упрощение подключения</h1>

<p>Идем в папку ~/.ssh, редактируем файл config (если нет - создаём)</p>

<figure class='code'><figcaption><span>Содержимое файла config</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Host <span class="nb">test</span>
</span><span class='line'>HostName ftp.test.ru
</span><span class='line'>User username
</span></code></pre></td></tr></table></div></figure>


<p>Это сделано для того, чтобы можно было набрать ssh test, и началось подсоединение, дальше спросит пароль.</p>

<!-- more -->


<h1>Сам SSH</h1>

<ol>
<li>устанавливаем openSSH
<code>sudo apt-get install openssh-server</code></li>
<li>генерируем ключи (если их нет)
<code>ssh-keygen -t rsa</code> спросят место, соглашаться с поумолчанию, спросят пароль, не вводить.</li>
<li>копируем
<code>$ scp ~/.ssh/id_dsa.pub test:~/.ssh/authorized_keys</code>
последний раз вводим пароль.</li>
</ol>


<p>Есть альтернатива копированию scp:<br/>
 <code>bash
 ssh-copy-id [-i [identity_file]] [user@]machines
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Django-CMS установка и первичная настройка]]></title>
    <link href="http://Anshik.github.com/blog/2012/06/08/django-cms-ustanovka-i-piervichnaia-nastroika/"/>
    <updated>2012-06-08T08:47:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2012/06/08/django-cms-ustanovka-i-piervichnaia-nastroika</id>
    <content type="html"><![CDATA[<h3>Что такое Djang-CMS</h3>

<p>Django-CMS &mdash; это система управления контентом, написанная на Python, с использованием фреймворка Django. Она гибкая, настраиваемая, для неё создано много модулей. Помимо этого можно добавлять свои модули.</p>

<h3>Установка</h3>

<ol>
<li>Сделаем новый <a href="http://Anshik.github.com/blog/2012/06/05/ispolzovaniie-virtualenv-python">virtualenv</a></li>
</ol>


<figure class='code'><figcaption><span>Запустите в шеле следующие комманды</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo aptitude install python2.6 python-setuptools python-imaging
</span><span class='line'>sudo easy_install pip
</span><span class='line'>sudo pip install <span class="nv">django</span><span class="o">==</span>1.3.1 django-cms south
</span><span class='line'>django-admin.py startproject mycmsproject
</span><span class='line'><span class="nb">cd </span>mycmsproject
</span><span class='line'>rm settings.py
</span><span class='line'>rm urls.py
</span><span class='line'>wget https://gist.github.com/raw/1125918/settings.py
</span><span class='line'>wget https://gist.github.com/raw/1125918/urls.py
</span><span class='line'>mkdir templates
</span><span class='line'><span class="nb">cd </span>templates
</span><span class='line'>wget https://gist.github.com/raw/1125918/example.html
</span><span class='line'><span class="nb">cd</span> ..
</span><span class='line'>python manage.py syncdb --all
</span><span class='line'>python manage.py migrate --fake
</span><span class='line'>python manage.py runserver
</span></code></pre></td></tr></table></div></figure>


<h3>Настройка одного языка для django-cms 2.4.1</h3>

<p>Так чтобы небыло префикса &#8216;ru&#8217; в урлах
В файл settings.py</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">CMS_LANGUAGES</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="mi">1</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="s">&#39;code&#39;</span><span class="p">:</span> <span class="s">&#39;ru&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="n">gettext</span><span class="p">(</span><span class="s">&#39;Russian&#39;</span><span class="p">),</span>
</span><span class='line'>            <span class="c"># &#39;fallbacks&#39;: [],</span>
</span><span class='line'>            <span class="s">&#39;public&#39;</span><span class="p">:</span> <span class="bp">True</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&#39;hide_untranslated&#39;</span><span class="p">:</span> <span class="bp">True</span><span class="p">,</span>
</span><span class='line'>            <span class="s">&#39;redirect_on_fallback&#39;</span><span class="p">:</span><span class="bp">False</span><span class="p">,</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="s">&#39;default&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&#39;fallbacks&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s">&#39;ru&#39;</span><span class="p">],</span>
</span><span class='line'>        <span class="s">&#39;redirect_on_fallback&#39;</span><span class="p">:</span><span class="bp">True</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;public&#39;</span><span class="p">:</span> <span class="bp">False</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;hide_untranslated&#39;</span><span class="p">:</span> <span class="bp">False</span><span class="p">,</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">DEFAULT_LANGUAGE</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">LANGUAGE_CODE</span> <span class="o">=</span> <span class="s">&#39;ru-RU&#39;</span>
</span><span class='line'><span class="n">USE_I18N</span> <span class="o">=</span> <span class="bp">True</span>
</span><span class='line'><span class="n">USE_L10N</span> <span class="o">=</span> <span class="bp">True</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Повторение place_holder элементов на всех страницах</h3>

<p>Часто требуется повторение элементов с главной страницы на всех страницах
Для этого нужно в <strong>расширенных свойствах</strong> страницы указать id страницы <code>index</code> (к примеру)
И написать что-то вроде этого: {\% show_placeholder &#8220;teaser_right_bottom&#8221; &#8220;index&#8221; \%}</p>

<h3>Новостной плагин для django-cms</h3>

<p><code>hg clone ssh://hg@bitbucket.org/zerok/cmsplugin-news</code></p>

<p>Эти новости хорошие, только подправить navigation.py</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#from cms.utils.navigation import NavigationNode</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">menus.base</span> <span class="kn">import</span> <span class="n">NavigationNode</span>
</span></code></pre></td></tr></table></div></figure>


<p>Дальше кастомизировать шаблоны, предварительно скопировав их в папку templates проекта. Возможно вся кастомизация будет заключаться в прописвании {\% extends &#8220;base.html&#8221; \%} в начало каждого шаблона новостей.</p>

<p>Ещё для использования sqlite
<code>easy_install pysqlite</code></p>

<p>Для моего проекта используются следующие модули, сделано командой pip freeze:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>../../bin/pip freeze
</span><span class='line'><span class="nv">Django</span><span class="o">==</span>1.3.1
</span><span class='line'><span class="nv">PIL</span><span class="o">==</span>1.1.7
</span><span class='line'><span class="nv">South</span><span class="o">==</span>0.7.3
</span><span class='line'>cmsplugin-contact<span class="o">==</span>0.9.8
</span><span class='line'>cmsplugin-filer<span class="o">==</span>0.8.0
</span><span class='line'>cmsplugin-filer-gallery<span class="o">==</span>1.0.1.pre-alpha
</span><span class='line'>cmsplugin-news<span class="o">==</span>0.3b
</span><span class='line'>django-appmedia<span class="o">==</span>1.0.1
</span><span class='line'>django-categories<span class="o">==</span>0.8.5
</span><span class='line'>django-classy-tags<span class="o">==</span>0.3.4.1
</span><span class='line'>django-cms<span class="o">==</span>2.2
</span><span class='line'>django-filer<span class="o">==</span>0.8.5
</span><span class='line'>django-filer-gallery<span class="o">==</span>1.0.pre-alpha
</span><span class='line'>django-mptt<span class="o">==</span>0.4.2
</span><span class='line'>django-polymorphic<span class="o">==</span>0.4.2
</span><span class='line'>django-sekizai<span class="o">==</span>0.5
</span><span class='line'>easy-thumbnails<span class="o">==</span>1.0-alpha-20
</span><span class='line'><span class="nv">html5lib</span><span class="o">==</span>0.90
</span><span class='line'><span class="nv">wsgiref</span><span class="o">==</span>0.1.2
</span></code></pre></td></tr></table></div></figure>


<p>Если есть уже работающий на сервере проект, а его нужно запустить локально, то создаем виртуальную питоновскую среду, и кропотливо устанавливаем все зависимости. Иначе выйдет боком.</p>

<h3>Использование Bootstrap</h3>

<p>Я скачиваю с <a href="https://github.com/twitter/bootstrap">гитхаб</a> zip архив bootstrap. Затем кладу в папку статических файлов папки из master-bootstrap: img, js, less</p>

<p>В папке less создаю файл style.less примерно такого содержания:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="k">@inputHeight</span><span class="o">:</span> <span class="nt">10px</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">@import</span> <span class="s1">&#39;mixins.less&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">header</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">color</span><span class="o">:</span> <span class="m">#000000</span><span class="p">;</span>
</span><span class='line'>  <span class="o">//</span> <span class="k">background-color</span><span class="o">:</span> <span class="m">#666666</span><span class="p">;</span>
</span><span class='line'>  <span class="o">//</span> <span class="m">#gradie</span><span class="n">nt</span> <span class="o">&gt;</span> <span class="o">.</span><span class="n">vertical</span><span class="p">(</span><span class="m">#D695B3</span><span class="o">,</span> <span class="m">#666666</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">//</span> <span class="k">background-image</span><span class="o">:</span> <span class="sx">url(../img/maket_03.png)</span><span class="p">;</span>
</span><span class='line'>  <span class="o">//</span> <span class="k">background-repeat</span><span class="o">:</span> <span class="k">no-repeat</span><span class="p">;</span>
</span><span class='line'>  <span class="o">//</span> <span class="k">background-position</span><span class="o">:</span> <span class="k">center</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="nt">body</span><span class="p">{</span>
</span><span class='line'>    <span class="k">background-color</span><span class="o">:</span> <span class="m">#666666</span><span class="p">;</span>
</span><span class='line'>    <span class="k">color</span><span class="o">:</span> <span class="m">#FEFCFD</span><span class="p">;</span>
</span><span class='line'>    <span class="k">height</span><span class="o">:</span> <span class="m">100</span><span class="o">%</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nc">.my_nav_bar</span><span class="p">{</span>
</span><span class='line'>  <span class="k">font</span><span class="o">:</span> <span class="k">bold</span> <span class="m">16px</span> <span class="n">Arial</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nt">article</span><span class="p">{</span>
</span><span class='line'>  <span class="k">line-height</span><span class="o">:</span> <span class="m">25px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">background</span><span class="o">:</span> <span class="sx">url(../img/stroke.jpg)</span> <span class="m">100</span><span class="o">%</span> <span class="m">50</span><span class="o">%</span> <span class="k">repeat-y</span> <span class="k">transparent</span><span class="p">;</span>
</span><span class='line'>  <span class="n">p</span><span class="err">{</span>
</span><span class='line'>    <span class="k">margin-bottom</span><span class="o">:</span> <span class="m">30px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">margin-right</span><span class="o">:</span> <span class="m">40px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">padding-right</span><span class="o">:</span> <span class="m">10px</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="err">}</span>
</span><span class='line'>
</span><span class='line'><span class="nc">.my_grad</span><span class="p">{</span>
</span><span class='line'>  <span class="k">background-color</span><span class="o">:</span> <span class="m">#666666</span><span class="p">;</span>
</span><span class='line'>  <span class="m">#gradie</span><span class="n">nt</span> <span class="o">&gt;</span> <span class="o">.</span><span class="n">vertical</span><span class="p">(</span><span class="m">#D695B3</span><span class="o">,</span> <span class="m">#666666</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nf">#myhr</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">border-bottom</span><span class="o">:</span> <span class="m">2px</span> <span class="k">solid</span> <span class="m">#D594B2</span><span class="p">;</span>
</span><span class='line'>    <span class="k">padding-bottom</span><span class="o">:</span> <span class="m">10px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">margin-bottom</span><span class="o">:</span> <span class="m">15px</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nc">.footer_cups</span><span class="p">{</span>
</span><span class='line'>  <span class="k">background-image</span><span class="o">:</span> <span class="sx">url(../img/bcups.jpg)</span><span class="p">;</span>
</span><span class='line'>  <span class="k">background-repeat</span><span class="o">:</span> <span class="k">no-repeat</span><span class="p">;</span>
</span><span class='line'>  <span class="k">background-position</span><span class="o">:</span> <span class="k">right</span><span class="p">;</span>
</span><span class='line'>  <span class="k">height</span><span class="o">:</span> <span class="m">100px</span><span class="p">;</span>
</span><span class='line'>  <span class="n">a</span> <span class="err">{</span>
</span><span class='line'>      <span class="k">color</span><span class="o">:</span> <span class="m">#FEFCFD</span><span class="p">;</span>
</span><span class='line'>      <span class="k">text-decoration</span><span class="o">:</span> <span class="k">underline</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nt">a</span><span class="nd">:hover</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">color</span><span class="o">:</span> <span class="m">#000</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="err">}</span>
</span><span class='line'>
</span><span class='line'><span class="nc">.thumbnails</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">text-align</span><span class="o">:</span><span class="k">center</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nc">.thumbnails</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">display</span><span class="o">:</span> <span class="k">inline</span><span class="o">-</span><span class="k">block</span><span class="p">;</span>
</span><span class='line'>    <span class="o">*</span><span class="k">display</span><span class="o">:</span><span class="k">inline</span><span class="p">;</span> <span class="c">/* ie7 fix */</span>
</span><span class='line'>    <span class="k">float</span><span class="o">:</span> <span class="k">none</span><span class="p">;</span> <span class="c">/* this is the part that makes it work */</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">//</span><span class="nt">CUSTOM</span>
</span><span class='line'><span class="nc">.offers</span> <span class="nt">img</span><span class="p">{</span>
</span><span class='line'>  <span class="k">margin</span><span class="o">:</span> <span class="m">10px</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nt">aside</span> <span class="nt">img</span><span class="p">{</span>
</span><span class='line'>  <span class="k">margin</span><span class="o">:</span> <span class="m">10px</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nc">.plugin_yandexmap</span> <span class="nt">img</span><span class="p">{</span>
</span><span class='line'> <span class="k">max-width</span><span class="o">:</span> <span class="k">none</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Дальше компилирую его командой, то как это настраивается можно почитать <a href="http://bootstrap.lesscss.ru/less.html">тут</a>.
<code>lessc style.less style.css</code>
И соответственно в шаблоне уже ссылаемся на новый style.css</p>

<p>Ещё с главной страницы bootstrap качаем скомпилированный bootstrap.zip, копируем файлы в соответствующие папки</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Module cuisine, как нахлобучка над Fabric]]></title>
    <link href="http://Anshik.github.com/blog/2012/06/07/module-cuisine/"/>
    <updated>2012-06-07T10:25:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2012/06/07/module-cuisine</id>
    <content type="html"><![CDATA[<h3>Что такое Cuisine?</h3>

<p>Cuisine это надстройка, набор сахара, дополнительный уровень абстракции над <a href="http://Anshik.github.com/blog/2012/06/06/fabric-dlia-python">Fabric</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Как установить Hypercomments в Octopress]]></title>
    <link href="http://Anshik.github.com/blog/2012/06/06/kak-ustanovit-hypercomments-v-octopress/"/>
    <updated>2012-06-06T16:59:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2012/06/06/kak-ustanovit-hypercomments-v-octopress</id>
    <content type="html"><![CDATA[<h3>Введение</h3>

<p>В Octopress по умолчанию предлагается использовать комментарии Disqus, а захотелось попробовать более гиковские Hypercomments. Решил разобраться с вопросом.</p>

<!-- more -->


<h3>Регистрация</h3>

<p>Регистрируемся на <a href="http://hypercomments.com/">сайте</a>
Получаем код виджета для вставления в свой сайт.</p>

<figure class='code'><figcaption><span>У меня он выглядит так</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;hypercomments_widget&quot;</span><span class="nt">&gt;&lt;/div&gt;&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">_hcp</span> <span class="o">=</span> <span class="nx">_hcp</span> <span class="o">||</span> <span class="p">{};</span>
</span><span class='line'><span class="nx">_hcp</span><span class="p">.</span><span class="nx">widget_id</span> <span class="o">=</span> <span class="mi">1551</span><span class="p">;</span>
</span><span class='line'><span class="nx">_hcp</span><span class="p">.</span><span class="nx">widget</span> <span class="o">=</span> <span class="s2">&quot;Stream&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">hcc</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;script&quot;</span><span class="p">);</span> <span class="nx">hcc</span><span class="p">.</span><span class="nx">type</span> <span class="o">=</span> <span class="s2">&quot;text/javascript&quot;</span><span class="p">;</span> <span class="nx">hcc</span><span class="p">.</span><span class="nx">async</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'><span class="nx">hcc</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="p">(</span><span class="s2">&quot;https:&quot;</span> <span class="o">==</span> <span class="nb">document</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">protocol</span> <span class="o">?</span> <span class="s2">&quot;https&quot;</span> <span class="o">:</span> <span class="s2">&quot;http&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;://widget.hypercomments.com/apps/js/hc.js&quot;</span><span class="p">;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">s</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;script&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">];</span> <span class="nx">s</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">hcc</span><span class="p">,</span> <span class="nx">s</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">);</span>
</span><span class='line'><span class="p">})();</span><span class="nt">&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Встраивание</h3>

<p>Я встраивал немного костылём, зато быстро.
Создаём файл <code>source/_insludes/hypercomments.html</code></p>

<p><img class="center" src="http://Anshik.github.com/../blog_img/hypercomments.png" title="Вот как должен выглядеть файл" ></p>

<p>Я оставил проверку наличия комментов Дискурса.
Дальше меняем файлы <code>source/_layouts/page.html, source/_layouts/page.html</code> в обоих файлах одинаковый кусочек кода</p>

<figure class='code'><figcaption><span>Было, стало</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>  <span class="c">&lt;!-- Было --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;section&gt;</span>
</span><span class='line'>    <span class="nt">&lt;h1&gt;</span>Comments<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;disqus_thread&quot;</span> <span class="na">aria-live=</span><span class="s">&quot;polite&quot;</span><span class="nt">&gt;</span><noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<span class="nt">&lt;/div&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/section&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c">&lt;!-- Стало --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;section&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;hypercomments_widget&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/section&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Затем редактируем файл <code>_includes/after_footer.html</code>
<img class="center" src="http://Anshik.github.com/../blog_img/hypercomments_after_footer.png" title="Вот как должен выглядеть файл after_footer.html" ></p>

<h3>Всё! Should work&#8230; :)</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fabric для python, первые шаги]]></title>
    <link href="http://Anshik.github.com/blog/2012/06/06/fabric-dlia-python/"/>
    <updated>2012-06-06T16:54:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2012/06/06/fabric-dlia-python</id>
    <content type="html"><![CDATA[<h3>Что такое Fabric?</h3>

<p>Вольный перевод <a href="http://docs.fabfile.org/en/1.4.2/index.html">документации</a><br/>
Fabric &mdash; это библиотечка для python версии >= 2.5 и консольная утилитка для облегчения использования SSH при деплое проекта, или выполнения админских задач.</p>

<p>Она предоставляет простой набор операций для выполнения локальных или удалённых команд, загрузки, скачивания файлов и др.</p>

<!-- more -->


<h3>Установка</h3>

<p>Я устанавливаю в свой питоний инстанс, созданный как написано <a href="http://Anshik.github.com/blog/2012/06/05/ispolzovaniie-virtualenv-python">тут</a><br/>
<code>$ ./bin/easy_install fabric</code></p>

<p>Он подтягивает ещё <code>ssh 1.7.14</code> и <code>pycrypto 2.6</code>.</p>

<h3>Простейшее использование</h3>

<p>Обычно создают модуль на Python, содержащий одну или более функций, затем исполняют его при помощи <strong>fab</strong>. Рассмотрим простейший пример. Для запуска выполняем из папки с этим скриптом <code>fab hello</code>.</p>

<figure class='code'><figcaption><span>fabric.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!./bin/python</span>
</span><span class='line'><span class="c"># -*- coding: utf-8 -*-</span>
</span><span class='line'>
</span><span class='line'><span class="kn">from</span> <span class="nn">fabric.api</span> <span class="kn">import</span> <span class="n">run</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">hello</span><span class="p">():</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&quot;It&#39;s says: hello&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>При его запуске мне выдаёт предупреждение</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/usr/local/lib/python2.6/dist-packages/pycrypto-2.6-py2.6-linux-x86_64.egg/Crypto/Util/number.py:57: PowmInsecureWarning: Not using mpz_powm_sec.  You should rebuild using libgmp &gt;<span class="o">=</span> 5 to avoid timing attack vulnerability.
</span><span class='line'>  _warn<span class="o">(</span><span class="s2">&quot;Not using mpz_powm_sec.  You should rebuild using libgmp &gt;= 5 to avoid timing attack vulnerability.&quot;</span>, PowmInsecureWarning<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>И затем непосредственно вывод fabric</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>It<span class="err">&#39;</span>s says: hello
</span><span class='line'>
</span><span class='line'>Done.
</span></code></pre></td></tr></table></div></figure>


<p>Предупреждание выдает даже не Фабрик, а pycrypto, ну и ладно, не буду ничего обновлять</p>

<h3>Передача аргументов</h3>

<p>Передача аргументов происходит следующим образом:<br/>
<code>&lt;task name&gt;:&lt;arg&gt;,&lt;kwarg&gt;=&lt;value&gt;,....</code></p>

<figure class='code'><figcaption><span>Передача аргументов</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">fabric.api</span> <span class="kn">import</span> <span class="n">run</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">hello</span><span class="p">(</span><span class="n">name_in</span><span class="o">=</span><span class="s">&#39;name&#39;</span><span class="p">):</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&quot;It&#39;s says: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">name_in</span>
</span></code></pre></td></tr></table></div></figure>


<p>Вызов с аргументами можно производить двумя способами:
<code>fab hello:name_in=Anshik</code><br/>
<code>fab hello:Anshik</code><br/>
Первый вариант словарем, второй &mdash; аргументами.</p>

<h3>Продолжение мысли cuisine</h3>

<p>cuisine &mdash; переводится как кухня<br/>
Оно добавляет ещё уровень абстракции для упрощения</p>

<p><a href="https://github.com/sebastien/cuisine">cuisine</a></p>

<p><a href="http://Anshik.github.com/blog/2012/06/07/module-cuisine">более подробно в блоге</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Использование virtualenv python]]></title>
    <link href="http://Anshik.github.com/blog/2012/06/05/ispolzovaniie-virtualenv-python/"/>
    <updated>2012-06-05T14:05:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2012/06/05/ispolzovaniie-virtualenv-python</id>
    <content type="html"><![CDATA[<h3>Введение</h3>

<p>Давно хотел разобраться, как настраивать и использовать <a href="http://pypi.python.org/pypi/virtualenv">virtualenv</a>.
Virtualenv это средство для создания изолированного окружения Python.</p>

<h4>Зачем оно нужно?</h4>

<p>По умолчанию easy_install ставит питоновские пакеты примерно в <code>/usr/local/lib/python2.6/dist-packages</code>
И там получается помойка из пакетов, в некоторых случаях мы работаем со старыми версиями пакетов.</p>

<!-- more -->


<blockquote><p>К примеру был написан сайт на Django, года два назад, и нужно использовать старую джангу, чтобы всё не переписывать. Тут два варианта :)<br/>
* Для слабаков:<br/>
Просто скопировать старую джангу в проект и не париться, и скопировать туда же в проект старые модули, и всё будет работать :)</p>

<ul>
<li>Для не_слабаков:<br/>
Настроить virtualenv под проект.</li>
</ul>


<p><strong>Virtualenv</strong> &mdash; позволяет для каждого проекта создать <strong>своё окружение</strong> <em>питонячьих</em> пакетов.</p></blockquote>

<h3>Установка</h3>

<p>sudo easy_install virtualenv</p>

<figure class='code'><figcaption><span>Как-то так оно установливается</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo easy_install virtualenv
</span><span class='line'>install_dir /usr/local/lib/python2.6/dist-packages/
</span><span class='line'>Searching <span class="k">for </span>virtualenv
</span><span class='line'>Reading http://pypi.python.org/simple/virtualenv/
</span><span class='line'>Reading http://www.virtualenv.org
</span><span class='line'>Reading http://virtualenv.openplans.org
</span><span class='line'>Best match: virtualenv 1.7.1.2
</span><span class='line'>Downloading http://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.7.1.2.tar.gz#md5<span class="o">=</span>3be8a014c27340f48b56465f9109d9fa
</span><span class='line'>Processing virtualenv-1.7.1.2.tar.gz
</span><span class='line'>Running virtualenv-1.7.1.2/setup.py -q bdist_egg --dist-dir /tmp/easy_install-yLN55d/virtualenv-1.7.1.2/egg-dist-tmp-a8EZxb
</span><span class='line'>warning: no previously-included files matching <span class="s1">&#39;*.*&#39;</span> found under directory <span class="s1">&#39;docs/_templates&#39;</span>
</span><span class='line'>Adding virtualenv 1.7.1.2 to easy-install.pth file
</span><span class='line'>Installing virtualenv script to /usr/local/bin
</span><span class='line'>
</span><span class='line'>Installed /usr/local/lib/python2.6/dist-packages/virtualenv-1.7.1.2-py2.6.egg
</span><span class='line'>Processing dependencies <span class="k">for </span>virtualenv
</span><span class='line'>Finished processing dependencies <span class="k">for </span>virtualenv
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Проверяем </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>whereis virtualenv
</span><span class='line'>virtualenv: /usr/local/bin/virtualenv
</span></code></pre></td></tr></table></div></figure>


<h3>Создание окружения</h3>

<figure class='code'><figcaption><span>Создание окружения</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>home:~/temp<span class="nv">$ </span>virtualenv  -p /usr/bin/python2.6 --no-site-packages custom_python
</span><span class='line'>Running virtualenv with interpreter /usr/bin/python2.6
</span><span class='line'>The --no-site-packages flag is deprecated; it is now the default behavior.
</span><span class='line'>New python executable in custom_python/bin/python2.6
</span><span class='line'>Also creating executable in custom_python/bin/python
</span><span class='line'>Installing setuptools............done.
</span><span class='line'>Installing pip...............done.
</span><span class='line'>home:~/temp<span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>Мы сказали, что хотим чтобы в папке <strong>custom_python</strong> использовался python интерпретатор, лежащий в <code>/usr/bin/python2.6</code>, и сказали, что не нужно использовать системных <strong>site-packages</strong>. А нам подсказали, что теперь писать &#8211;no-site-packages не нужно.</p>

<figure class='code'><figcaption><span>Смотрим, что получилось в папке custom_python.</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>home:~/temp/custom_python<span class="nv">$ </span>ls
</span><span class='line'>bin  include  lib
</span><span class='line'>home:~/temp/custom_python<span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>Для запуска приложения в нашей среде нужно сказать <code>./bin/python</code></p>

<h3>Пример установки Django</h3>

<p>Мне как раз захотелось запустить Django1.4, потом django-cms и т.д.<br/>
<code>home:~/temp/custom_python$ ./bin/easy_install django</code></p>

<p>Django скачивается, устанавливается и теперь лежит в:<br/>
<code>home:~/temp/custom_python/lib/python2.6/site-packages/Django-1.4-py2.6.egg</code></p>

<figure class='code'><figcaption><span>Создание и запуск проекта Django</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>home:~/temp/custom_python<span class="nv">$ </span>./bin/django-admin.py startproject custom_django
</span><span class='line'>home:~/temp/custom_python<span class="nv">$ </span><span class="nb">cd </span>custom_django/
</span><span class='line'>home:~/temp/custom_python/custom_django<span class="nv">$ </span>ls
</span><span class='line'>custom_django  manage.py
</span><span class='line'>home:~/temp/custom_python/custom_django<span class="nv">$ </span>../bin/python manage.py runserver
</span><span class='line'>Validating models...
</span><span class='line'>
</span><span class='line'>0 errors found
</span><span class='line'>Django version 1.4, using settings <span class="s1">&#39;custom_django.settings&#39;</span>
</span><span class='line'>Development server is running at http://127.0.0.1:8000/
</span><span class='line'>Quit the server with CONTROL-C.
</span></code></pre></td></tr></table></div></figure>


<p>В общем-то, можно сказать всё. И не так страшно, как казалось.</p>

<h4>Запуск скрипта</h4>

<p>Создаём файл, обратите внимание на строчку <code>#!./bin/python</code> вначале файла, говорим, что будем при запуске использовать наш интерпретатор.</p>

<figure class='code'><figcaption><span>К примеру такой tst.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!./bin/python</span>
</span><span class='line'><span class="c"># -*- coding: utf-8 -*-</span>
</span><span class='line'>
</span><span class='line'><span class="kn">from</span> <span class="nn">random</span> <span class="kn">import</span> <span class="n">random</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">struct</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'>
</span><span class='line'><span class="n">RAND_NUMS</span> <span class="o">=</span> <span class="mi">10</span>
</span><span class='line'><span class="n">rand_list</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="n">RAND_NUMS</span><span class="p">):</span>
</span><span class='line'>    <span class="n">a</span> <span class="o">=</span> <span class="n">random</span><span class="p">()</span>
</span><span class='line'>    <span class="n">rand_list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="s">&#39;B&#39;</span><span class="p">,</span> <span class="nb">int</span><span class="p">((</span><span class="n">a</span><span class="o">*</span><span class="mi">100</span><span class="p">)</span><span class="o">%</span><span class="mi">255</span><span class="p">)))</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span> <span class="n">rand_list</span>
</span><span class='line'><span class="k">print</span> <span class="n">sys</span><span class="o">.</span><span class="n">executable</span>
</span></code></pre></td></tr></table></div></figure>


<p>Говорим <code>chmod +x tst.py</code>, запускаем <code>./tst.py</code></p>

<figure class='code'><figcaption><span>Результат</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>home:~/temp/custom_python<span class="nv">$ </span>./tst.py
</span><span class='line'><span class="o">[</span><span class="s1">&#39;W&#39;</span>, <span class="s1">&#39;\x1f&#39;</span>, <span class="s1">&#39;\x06&#39;</span>, <span class="s1">&#39;\x0f&#39;</span>, <span class="s1">&#39;\x03&#39;</span>, <span class="s1">&#39;b&#39;</span>, <span class="s1">&#39;T&#39;</span>, <span class="s1">&#39;G&#39;</span>, <span class="s1">&#39;\x17&#39;</span>, <span class="s1">&#39;\x04&#39;</span><span class="o">]</span>
</span><span class='line'>/home/apalkov/temp/custom_python/bin/python
</span><span class='line'>
</span><span class='line'>home:~/temp/custom_python<span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<h4>Облегчение работы с virtualenv при помощи virtualenvwrapper</h4>

<p><a href="http://www.doughellmann.com/docs/virtualenvwrapper/">virtualenvwrapper</a> написанный Doug Hellmann. Позволяет управлять виртуальными окружениями.</p>

<h5>Установка</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo easy_install virtualenvwrapper
</span><span class='line'>mkdir ~/.virtualenvs
</span></code></pre></td></tr></table></div></figure>


<p>~/.bashrc следующие содержание
export WORKON_HOME=$HOME/.virtualenvs
source /usr/local/bin/virtualenvwrapper.sh</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">source</span> ~/.bashrc
</span></code></pre></td></tr></table></div></figure>


<p>Создаем новое окружение:</p>

<blockquote><p>mkvirtualenv blog</p></blockquote>

<p>Активируем:</p>

<blockquote><p>workon blog</p></blockquote>

<p>Деактивируем</p>

<blockquote><p>deactivate</p></blockquote>

<p>Удаляем</p>

<blockquote><p>rmvirtualenv blog</p></blockquote>

<p>В общем-то всё.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Добавление кастомных страниц]]></title>
    <link href="http://Anshik.github.com/blog/2012/05/29/dobavlieniie-kastomnykh-stranits/"/>
    <updated>2012-05-29T17:04:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2012/05/29/dobavlieniie-kastomnykh-stranits</id>
    <content type="html"><![CDATA[<p>Блог, архив блога - это хорошо. Но давно интересовал вопрос:</p>

<blockquote><p>Как добавить свою страницу в меню навигации.</p></blockquote>

<p>Нашёл ответ, всё оказалось как всегда просто.</p>

<!-- more -->


<h3>Создаём новую страницу &#8220;О себе&#8221;</h3>

<p><code>rake new_page["about"]</code></p>

<h3>Добавляем её в меню навигации</h3>

<p>Редактируем файл <code>source/custom/navigation.html</code></p>

<figure class='code'><figcaption><span>добавляем урл своей страницы 4 строка</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">&quot;main-navigation&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;/&quot;</span><span class="nt">&gt;</span>Blog<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;/blog/archives&quot;</span><span class="nt">&gt;</span>Archives<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;/about&quot;</span><span class="nt">&gt;</span>Обо мне<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;/ul&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Редактируем содержимое страницы &#8220;О себе&#8221;</h3>

<p><code>vim source/about/index.markdown</code></p>

<p>Всё!</p>
]]></content>
  </entry>
  
</feed>
