<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ещё один блог]]></title>
  <link href="http://Anshik.github.com/atom.xml" rel="self"/>
  <link href="http://Anshik.github.com/"/>
  <updated>2012-05-29T12:03:25+04:00</updated>
  <id>http://Anshik.github.com/</id>
  <author>
    <name><![CDATA[Anshik]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Добавление комментариев в Octopress]]></title>
    <link href="http://Anshik.github.com/blog/2012/05/25/dobavlieniie-kommientariiev-v-octopress/"/>
    <updated>2012-05-25T14:04:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2012/05/25/dobavlieniie-kommientariiev-v-octopress</id>
    <content type="html"><![CDATA[<p>Добавление комментариев оказолось простым, регистрируемся на <a href="http://www.disqus.com">Disqus</a>.<br/>
При регистрации вводим краткое описание сайта и короткое название. Короткое название потом пригодится. Открываем файл <strong>_config.yml</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># Disqus Comments</span>
</span><span class='line'><span class="n">disqus_short_name</span><span class="p">:</span> <span class="err">короткое</span> <span class="err">название</span> <span class="err">сайта</span>
</span><span class='line'><span class="n">disqus_show_comment_count</span><span class="p">:</span> <span class="n">false</span>
</span></code></pre></td></tr></table></div></figure>


<p>И всего делов, всё начинает работать.
Дальше, если хочется русских комментариев, заходим в настройки сайта в дискурсе, и меняем временную зону и язык.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Замена лампочек в подъезде, парадной]]></title>
    <link href="http://Anshik.github.com/blog/2012/05/25/zamiena-lampochiek-v-podiezdie/"/>
    <updated>2012-05-25T09:52:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2012/05/25/zamiena-lampochiek-v-podiezdie</id>
    <content type="html"><![CDATA[<h3>Пост с блоггера от среды 28 декабря 2011 года</h3>

<p>Решил сразу написать пост по поводу замены лампочек на лестничной площадке.</p>

<p>Когда мы снимали квартиру, лампочки заменяли сами жильцы. Один раз даже собирали денежку на энергосберегающую лампочку :)</p>

<p>Там где мы сейчас живём всё проще, если не лениться:</p>

<p>Звонишь в ремонтно-эксплуатационную службу, и оставляешь заявку на &#8220;освещение N-го этажа, в N-ом подъезде&#8221;. Телефон службы у меня указан на счёте за коммунальные услуги.</p>

<h4>PS: Не ленитесь, запишите телефон ремонтно-эксплуатационной службы себе в телефон, и если обнаружите неисправную лампочку - звоните. Вы платите за исправное освещение деньги.</h4>

<h5>PPS: Сейчас пробую пройти квест с ремонтом уличного освещения в Петербурге.</h5>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Создание схемы базы данных из имеющейся базы данных в Django | database schema from existing database in django]]></title>
    <link href="http://Anshik.github.com/blog/2012/05/25/sozdaniie-skhiemy-bazy-dannykh-iz-imieiushchieisia-bazy-dannykh-v-django/"/>
    <updated>2012-05-25T08:49:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2012/05/25/sozdaniie-skhiemy-bazy-dannykh-iz-imieiushchieisia-bazy-dannykh-v-django</id>
    <content type="html"><![CDATA[<h3>Сделал базу данных в django. Как сделать из неё картинку, схему базы данных?</h3>

<p>Вот возник такой вопрос, и мне подсказали:<br/>
<a href="http://code.google.com/p/django-command-extensions/">django-command-extensions</a> устанавливаете, потом manage.py graph_models, только надо еще <a href="http://www.graphviz.org/">graphviz</a> иметь в системе установленным</p>

<!-- more -->


<h3>Более развёрнуто:</h3>

<ul>
<li>Если под убунтой, запускаем Synaptic, ставим:
graphviz<br/>
graphviz-doc<br/>
graphviz-dev<br/>
libgraphviz-dev<br/>
libgraph4<br/>
libxdot4<br/>
убунта подскажет и выставит сама зависимости</li>
<li>Качаем, либо достаём
<a href="http://networkx.lanl.gov/pygraphviz/download.html">pygraphviz</a>
Распаковываем, и мне пришлось раскомментировать в setup.py
строчки:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># Linux, generic UNIX</span>
</span><span class='line'><span class="n">library_path</span><span class="o">=</span><span class="s">&#39;/usr/lib/graphviz&#39;</span>
</span><span class='line'><span class="n">include_path</span><span class="o">=</span><span class="s">&#39;/usr/include/graphviz&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Иначе ругается, что переменные не заданы.<br/>
потом</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo python manage.py setup.py install
</span></code></pre></td></tr></table></div></figure>


<p>должно установиться.</p>

<ul>
<li>В наш проект джанги добавляем в приложения строчку</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'> <span class="n">INSTALLED_APPS</span> <span class="o">=</span> <span class="p">(</span>
</span><span class='line'>   <span class="s">&#39;django_extensions&#39;</span><span class="p">,</span>   <span class="c"># оно добавляет к нашим командам manage.py  graph_models</span>
</span><span class='line'> <span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Теперь самое интересное</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Create a dot file</span>
</span><span class='line'><span class="nv">$ </span>./manage.py graph_models -a &gt; my_project.dot
</span><span class='line'><span class="c"># Create a PNG image file called my_project_visualized.png with application grouping</span>
</span><span class='line'><span class="nv">$ </span>./manage.py graph_models -a -g -o my_project_visualized.png
</span><span class='line'><span class="c"># Create a dot file for only the &#39;foo&#39; and &#39;bar&#39; applications of your project</span>
</span><span class='line'><span class="nv">$ </span>./manage.py graph_models foo bar &gt; my_project.dot
</span></code></pre></td></tr></table></div></figure>


<p>Я использовал команду</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>./manage.py graph_models -a -g -o my_project_visualized.png
</span></code></pre></td></tr></table></div></figure>


<p>Для создания png-шечки, вот что получилось</p>

<p><img class="center" src="http://Anshik.github.com/../blog_img/my_project_visualized.png" title="пример того, что получилось" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ремонт фонарей уличного освещения, куда писать...]]></title>
    <link href="http://Anshik.github.com/blog/2012/05/25/riemont-fonariei-ulichnogho-osvieshchieniia/"/>
    <updated>2012-05-25T08:41:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2012/05/25/riemont-fonariei-ulichnogho-osvieshchieniia</id>
    <content type="html"><![CDATA[<h3>Введение</h3>

<p> Не так давно я обещал, что попытаюсь разобраться с проблемой не работающих фонарей на своей улице:
<a href="http://dumk1.blogspot.com/2011/12/blog-post_28.html">Линк поправлю, когда пост добавлю сюда, пока на гугл</a><br/>
 Речь пойдёт о ремонте уличных фонарей в Санкт-Петербурге. В принципе, я думаю ситуацию можно проецировать и на другие города России.</p>

<!-- more -->


<h3>Основная часть</h3>

<p> В Санкт-Петербурге вопросами уличного освещения занимается <a href="www.lensvet.com">&#8220;ЛенСвет&#8221;</a>
 Именно у них я нашёл что-то вроде гостевой книги, где заинтересованные люди пишут свои заявки на ремонт уличного освещения. Заходим к ним на сайт, выбираем раздел &#8220;Вопрос-ответ&#8221;, и оставляем свою заявку, примерно так:</p>

<p>25.12.2011 от Андрей<br/>
<strong>Вопрос:</strong> Снова здравствуйте. Коррекция: Не горят (вернее горят очень редко) ТРИ фонаря уличного освещения, адрес Светлановский 76 корпус 1. Первый фонарь расположен у первой парадной. Второй у третьей парадной. Третий фонарь у пятого подъезда, но не прямо у подъезда, а у трансформаторной будки. Если плохо объяснил, напишите мне письмо, пришлю карту с отметками. Спасибо.<br/>
<strong>Ответ:</strong> Андрей, добрый день! Перегоревшие лампы заменены Северным эксплуатационным районом.</p>

<p>Этот раздел просматривают и модерируют, так что думаю, адекватные заявки решаются. Не помню через сколько, примерно через неделю починили, потом написали ответ по факту. За что им спасибо, за выполнение своих обязанностей.</p>

<h3>Заключение</h3>

<p> Люди внимательные и хозяйственные замечают то что им хотелось бы исправить, отремонтировать, и желательно не своими руками, и если можно без особых денежных затрат и временных.</p>

<p> Мной приведён достаточно простой алгоритм решения проблемы ремонта уличного освещения.</p>

<h4>PS: Не ленитесь, вы платите за исправное освещение деньги.</h4>

<h4>PPS: В планах ещё два квеста: отключение радиоточки (лениво к ним ездить, можноб было это сделать через интернет, так они хитрецы не позволяют это. А то кто бы слушал их радио.), капитальный ремонт дома.</h4>

<h5>PPPS: Комментируйте, кому помогло.</h5>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ссылка на шпаргалки cheat-sheets]]></title>
    <link href="http://Anshik.github.com/blog/2012/05/25/ssylka-na-shparghalki-cheat-sheets/"/>
    <updated>2012-05-25T08:37:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2012/05/25/ssylka-na-shparghalki-cheat-sheets</id>
    <content type="html"><![CDATA[<p>Читал хабр, подкинули интересную ссылку на сайт, там собраны краткие подсказки, шпаргалки по разным языкам программирования и не только.<br/>
<strong><a href="http://cheat-sheets.org">cheat-sheets.org</a></strong>
 В общем, очень рекомендую.</p>

<p> Я уже скачал хелп по Django, Python, Regular Expressions.</p>

<p> А там ещё есть:<br/>
 <!-- more --></p>

<p>Donate
.NET
ActionScript
Ada
ADO.NET
Adobe
Adobe Acrobat
AJAX
Algebra
Apache
Apache Ant
Apache Camel
Apache Solr
APT
Arduino
ASCII
Astronomy
ASP
Assembly Language
Atom
AWK
Azure
Bash
Bazaar
BDB
Berkeley DB
BIRT
BlazeDS
Blogger
Blueprint
BPEL
BPM
BPML
Business Process Modeling
C
C#
C++
Calculus
Camera
Catalyst
Characters
Chef
Chemistry
chmod
Clojure
Cloud Computing
Cocoa
ColdFusion
Colour
Computer Science
Continuous Integration
Countries
CSS
CUE
CVS
DB2
db4o
DDD
Debian
Delphi
Design Pattern
Django
Doctrine
Doctypes
DOM
Domain-Driven Design
DOT language
Drupal
DTD
Eclipse
Ed
EJB
Emacs
Emoticon
Encoding
Erlang
F#
Facebook
Fedora
Feed
File
Firebug
Firefox
Firefox Add-ons
FitNesse
Flash
Flash Catalyst
Flex
Fonts
Fortran
Freeware
FTP
GDB
Geometry
Gift
Gimp
Git
GlassFish
Gmail
GoF
Google
Google App Engine
Google Chrome
Google Maps
Grails
Griffon
Groovy
Guitar
GWT
Hadoop
Hardware
Haskell
Hibernate
High Availability
htaccess
HTML
HTTP
Icons
Illustrator
IntelliJ IDEA
Internet Explorer
IRC
IVR
Java
Java EE
Java Persistence API
JavaFX
JavaScript
JavaServer Faces
JBoss
JDBC
jQuery
JSF
JSP
JUnit
Languages
LaTeX
LaTeX-Suite
less
Linux
Lisp
Logic
Lotus Domino
Lua
Lucene
Mac
Mac OS X
Maple
Markdown
Math
Mathematica
MathML
Mathomatic
MATLAB
Maven
Maxima
MFC
Microformats
Microsoft Excel
Microsoft Project
Microsoft Visual Studio
MIME
mod_include
mod_perl
mod_rewrite
MooTools
MSP
Mule
Music
MVVM
MySQL
NetBeans
NMAP
Node.js
Numbers
Objective-C
Open Source Media Framework
OpenCL
OpenCV
OpenMP
OpenSearch
OpenSSH
OpenVZ
Oracle
org-mode
OS X
Perforce
Perl
Photoshop
PHP
PHP Frameworks
Physics
Play Framework
PostgreSQL
Probability Theory
Prototype
Python
Qt
Quicksilver
R
Red Hat
Regular Expressions
Religion
REST
RichFaces
rpm
RSS
Ruby
Ruby on Rails
Sandcastle
Scala
Scalability
Science
Screen
Seam
Sed
Selenium
Sendmail
ServiceMix
Shell Script
Silverlight
Smile
Social Bookmarks
Solaris
Spring Framework
Spring Roo
SQL
SQL Server
SQLite
SSI
SSL
Statistics
SVG
SVN
Sybase
Symfony
Tapestry
Tcl/Tk
TCP
TeX
Thunderbird
TLDs
TLS
Trigonometry
TTCN-3
Twitter
UML
Ubuntu
Unicode
Unix
UTF
Vaadin
VB
VBA
VBScript
Veritas Cluster
Vi
Vim
VIM-LaTeX
Virtualization
Visual Basic
VMware
VoiceXML
vvvv
WebGL
WebMatrix
Wicket
Wikipedia
Windows
Windows Azure
Windows Communication Foundation
Windows Presentation Foundation
Windows PowerShell
WordPress
World of Warcraft
WS-BPEL
XHTML
XML
XML Schema
XPath
XSL
XSLT
XSS
Yahoo
Zen Coding
Friends of Cheat-Sheets.org
Other Collectors
After
The only one you need</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Установка tortoisehg в Ubuntu]]></title>
    <link href="http://Anshik.github.com/blog/2012/05/25/ustanovka-tortoisehg-v-ubuntu/"/>
    <updated>2012-05-25T08:35:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2012/05/25/ustanovka-tortoisehg-v-ubuntu</id>
    <content type="html"><![CDATA[<p>Всё очень просто:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo add-apt-repository ppa:mercurial-ppa/releases
</span><span class='line'><span class="nv">$ </span>sudo add-apt-repository ppa:tortoisehg-ppa/releases
</span><span class='line'><span class="nv">$ </span>sudo apt-get update
</span><span class='line'><span class="nv">$ </span>sudo apt-get install tortoisehg tortoisehg-nautilus
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Отключение иксов при загрузке Ubuntu (Start ubuntu with no X server)]]></title>
    <link href="http://Anshik.github.com/blog/2012/05/25/otkliuchieniie-iksov-pri-zaghruzkie-ubuntu/"/>
    <updated>2012-05-25T08:31:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2012/05/25/otkliuchieniie-iksov-pri-zaghruzkie-ubuntu</id>
    <content type="html"><![CDATA[<p>Вписываем в файл <strong>/etc/init/gdm.conf</strong> строчку:<br/>
and runlevel [5]<br/>
это условия старта иксов. Для старта иксов нужен 5 runlevel а на этапе загрузки он ещё только второй.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>start on <span class="o">(</span>filesystem
</span><span class='line'>and runlevel <span class="o">[</span>5<span class="o">]</span>
</span><span class='line'>and started dbus
</span><span class='line'>and <span class="o">(</span>drm-device-added card0 <span class="nv">PRIMARY_DEVICE_FOR_DISPLAY</span><span class="o">=</span>1
</span><span class='line'>or stopped udevtrigger<span class="o">))</span>
</span><span class='line'>stop on runlevel <span class="o">[</span>016<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Таким образом мы не загружаем иксов. Для их запуска логинимся и выполняем команду startx.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python выделение пути и имени файла]]></title>
    <link href="http://Anshik.github.com/blog/2012/05/25/python-vydielieniie-puti-i-imieni-faila/"/>
    <updated>2012-05-25T08:11:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2012/05/25/python-vydielieniie-puti-i-imieni-faila</id>
    <content type="html"><![CDATA[<h3>В Python</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">os.path</span>
</span><span class='line'>
</span><span class='line'><span class="n">myPath</span> <span class="o">=</span> <span class="s">&#39;/Users/t/web/perl-python/I_Love_You.html&#39;</span>
</span><span class='line'><span class="p">(</span><span class="n">dirName</span><span class="p">,</span> <span class="n">fileName</span><span class="p">)</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="n">myPath</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="n">fileBaseName</span><span class="p">,</span> <span class="n">fileExtension</span><span class="p">)</span><span class="o">=</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">splitext</span><span class="p">(</span><span class="n">fileName</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span> <span class="n">dirName</span> <span class="c"># /Users/t/web/perl-python</span>
</span><span class='line'><span class="k">print</span> <span class="n">fileName</span> <span class="c"># I_Love_You.html</span>
</span><span class='line'><span class="k">print</span> <span class="n">fileBaseName</span> <span class="c"># I_Love_You</span>
</span><span class='line'><span class="k">print</span> <span class="n">fileExtension</span> <span class="c"># .html</span>
</span></code></pre></td></tr></table></div></figure>


<h3>В QT</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">filePath</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">filePath</span>
</span><span class='line'><span class="k">if</span> <span class="ow">not</span> <span class="n">filePath</span><span class="p">:</span>
</span><span class='line'>    <span class="n">filePath</span> <span class="o">=</span> <span class="s">&#39;../data&#39;</span>
</span><span class='line'><span class="n">fileName</span> <span class="o">=</span> <span class="n">QFileDialog</span><span class="o">.</span><span class="n">getOpenFileName</span> <span class="p">(</span><span class="n">filePath</span><span class="p">,</span> <span class="s">&#39;Arrays (*.inf; *.INF)&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="p">,</span> <span class="s">&#39;Select Array&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">if</span> <span class="ow">not</span> <span class="n">fileName</span><span class="p">:</span>
</span><span class='line'>    <span class="k">return</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Добавление нового поста и начальный тюннинг]]></title>
    <link href="http://Anshik.github.com/blog/2012/05/24/dobavlieniie-novogho-posta-i-nachalnyi-tiunningh/"/>
    <updated>2012-05-24T15:23:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2012/05/24/dobavlieniie-novogho-posta-i-nachalnyi-tiunningh</id>
    <content type="html"><![CDATA[<h3>Добавление нового поста в Octopress</h3>

<p>К примеру этот пост был добавлен командой</p>

<pre><code>* rake new_post["Добавление нового поста и начальный тюннинг"]
</code></pre>

<p>После new_post пробел не ставим, сразу идет квадратная скобочка, выгребете ошибку, будет создан файл new_post.markdown
Далее octopress создает файл с названием слага и расширением markdown примерно такого содержания:</p>

<!-- more -->


<pre><code>* layout: post
* title: "Добавление нового поста и начальный тюннинг"
* date: 2012-05-24 15:23
* comments: true
* categories: Octopress blogging использование
</code></pre>

<p>При написании категорий разделять запятыми не нужно</p>

<h3>Меняем название блога</h3>

<p>Идем в корень octopress, открываем файл _conifg.yml</p>

<p>6 строка: title, меняем &#8220;My Octopress Blog&#8221; например на &#8220;Ещё один блог&#8221;</p>

<p>7 строка: subtitle, тоже какой угодно, оставил пока как есть</p>

<h3>Посмотреть что наменяли</h3>

<p><strong>rake preview</strong></p>

<h3>Можно добавить информацию о себе</h3>

<p>Для добавления информации о себе, открываем файл _conifg.yml, и добавляем custom/asides/about.html.</p>

<p>Затем меняем в _includes/custom/asides/about.html содержимое</p>

<p>default_asides: [asides/recent_posts.html, asides/github.html, asides/twitter.html, asides/delicious.html, asides/pinboard.html, asides/googleplus.html, custom/asides/about.html]</p>

<h3>Заметьте</h3>

<p>Что наличие &#8220;ь&#8221; мягкого знака добавляет в слаг &#39; (апостроф), и к примеру у меня локальная ссылка такая не показывается.</p>

<h3>Ни что так не упрощает жизнь, как внимательное чтение документации</h3>

<h4>По поводу категорий</h4>

<p>Правильно писать так :)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># One category</span>
</span><span class='line'><span class="n">categories</span><span class="p">:</span> <span class="n">Sass</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Multiple categories example 1</span>
</span><span class='line'><span class="n">categories</span><span class="p">:</span> <span class="p">[</span><span class="n">CSS3</span><span class="p">,</span> <span class="n">Sass</span><span class="p">,</span> <span class="n">Media</span> <span class="n">Queries</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Multiple categories example 2</span>
</span><span class='line'><span class="n">categories</span><span class="p">:</span>
</span><span class='line'><span class="o">-</span> <span class="n">CSS3</span>
</span><span class='line'><span class="o">-</span> <span class="n">Sass</span>
</span><span class='line'><span class="o">-</span> <span class="n">Media</span> <span class="n">Queries</span>
</span></code></pre></td></tr></table></div></figure>


<h4>По поводу <strong>cut</strong></h4>

<p>Нужно поставить тег, пошёл везде ставить.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;!-- more --&gt;
</span></code></pre></td></tr></table></div></figure>


<h3>Добавление изображения</h3>

<p>Я создал папку <strong>blog_img</strong> в source и добавил картинку таким образом
Формат тега такой, в начале нужно слеши убрать, добавил для экранирования:</p>

<p><code>\{\% [img] [center] /../blog_img/my_project_visualized.png альт-описание \%\}</code></p>

<p>до этого нужно было додуматься /../blog_img/my_project_visualized.png</p>

<h3>Добавление SEO тегов</h3>

<p>В заголовок файла *.markdown дописываем поля:</p>

<p><strong>description:</strong> &#8220;описание страницы&#8221;<br/>
<strong>keywords:</strong> &#8220;ключевые слова&#8221;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Как я устанавливал Octopress]]></title>
    <link href="http://Anshik.github.com/blog/2012/05/24/kak-ia-ustanavlival-octopress/"/>
    <updated>2012-05-24T09:21:00+04:00</updated>
    <id>http://Anshik.github.com/blog/2012/05/24/kak-ia-ustanavlival-octopress</id>
    <content type="html"><![CDATA[<p>Очень сложно показалось, но потом разобрался.
Главное <strong>читать внимательно</strong> документацию.
<a href="http://octopress.org/">Сайт программы</a></p>

<h3><a href="http://octopress.org/docs/setup/">Установка</a></h3>

<!-- more -->


<p>Тут проблем возникнуть не должно, я использовал RVM, чего и вам желаю.</p>

<ul>
<li>команду <strong>rake install</strong> запускаем из папки octopress.</li>
</ul>


<h3>Настройка и деплой</h3>

<p>Вначале идем на <a href="github.com">Гитхаб</a>:</p>

<ul>
<li><p>Добавляем новый репозиторий <strong>Внимание</strong> он должен называться название_блога.github.com вот пример: git@github.com:Anshik/anshik.github.com.git. То есть при создании нового репозитория я вводил не просто anshik, а anshik.github.com. С этим я намучился, создавал вначале репозиторий просто anshik. И дальше скрипт setup_github_pages, вводил git@github.com:Anshik/anshik.git, а правильно
git@github.com:Anshik/anshik.github.com.git. Почему так? Объясню :).</p></li>
<li><p>при коротком названии без суффикса github.com, <a href="http://www.octopress.org">octopress</a> понимает это как Github Project pages (gh-pages), и пушит это автоматом в бранч gh-pages;</p></li>
<li><p>дальше бедный github видит, что у вас есть такой бранч(gh-pages), выдает сообщение <em>notification</em> о том, что вы успешно добавили странички, и он их с удовольствием переработал. И их можно будет посмотреть по адресу:
www.имя<em>неправильного</em>проекта.github.com/имя<em>неправильного</em>проекта, что нас совсем не устраивает.</p></li>
</ul>


<p>Тоже самое, только другими словами можно прочитать в документации Github Project pages. Но когда взгляд замылен и подсказать некому, можно и не заметить, что username.github.com, именно название репозитория, а не просто username.</p>

<p>В общем:
<strong>rake setup_github_pages</strong>
вводим адрес репозитория.</p>

<p>Дальше генерируем наш блог командой:</p>

<p><strong>rake generate</strong>
И деплоим (оно пушит в git само)
<strong>rake deploy</strong></p>

<p>Сгенерит блог, скопирует в _deploy/, добавит в git, закоммитит и запушит в мастер
И через несколько секунд вы получите email от Github, говорящий, что коммит принят и будет опубликован на сайте</p>

<p>Блог может показаться действительно минут через 10, и только если вам уведомление пришло :).</p>

<h3>Заметил странное</h3>

<p>Ну не очень странное, в опере русский шрифт не отображался
Идем в source/_includes/custom/head.html, в этом файле в хедер подсасываются гугловские шрифты, на мой взгляд проблема была в этом, детально разбираться не стал, просто коммент делаем так :)</p>

<blockquote><p>Fonts from Google&#8221;s Web font directory at http://google.com/webfonts
link href=&#8221;http://fonts.googleapis.com/css?family=PT+Serif:regular,italic,bold,bolditalic&#8221; rel=&#8221;stylesheet&#8221; type=&#8221;text/css&#8221;
link href=&#8221;http://fonts.googleapis.com/css?family=PT+Sans:regular,italic,bold,bolditalic&#8221; rel=&#8221;stylesheet&#8221; type=&#8221;text/css&#8221; &#8211;>
переносим конец коммента &#8211;> в конец файла</p></blockquote>

<p>Ага, сам поймался, не закоментировал ;)</p>
]]></content>
  </entry>
  
</feed>
